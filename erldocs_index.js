var index = [["app","bitcask","bitcask","[application]"],
             ["mod","bitcask","bitcask",[]],
             ["mod","bitcask","bitcask_app",[]],
             ["mod","bitcask","bitcask_lockops",[]],
             ["mod","bitcask","bitcask_merge_worker",[]],
             ["mod","bitcask","bitcask_nifs",[]],
             ["mod","bitcask","bitcask_sup",[]],
             ["fun","bitcask","bitcask:close/1",
              "Close a bitcask data store and flush any pending w"],
             ["fun","bitcask","bitcask:delete/2",
              "Delete a key from a bitcask datastore."],
             ["fun","bitcask","bitcask:fold/3",
              "fold over all K/V pairs in a bitcask datastore."],
             ["fun","bitcask","bitcask:fold_keys/3",
              "Fold over all keys in a bitcask datastore."],
             ["fun","bitcask","bitcask:get/2",
              "Retrieve a value by key from a bitcask datastore."],
             ["fun","bitcask","bitcask:get_filestate/2",[]],
             ["fun","bitcask","bitcask:get_opt/2",[]],
             ["fun","bitcask","bitcask:list_keys/1",
              "List all keys in a bitcask datastore."],
             ["fun","bitcask","bitcask:merge/1",
              "Merge several data files within a bitcask datastor"],
             ["fun","bitcask","bitcask:merge/2",
              "Merge several data files within a bitcask datastor"],
             ["fun","bitcask","bitcask:merge/3",
              "Merge several data files within a bitcask datastor"],
             ["fun","bitcask","bitcask:needs_merge/1",[]],
             ["fun","bitcask","bitcask:open/1",
              "Open a new or existing bitcask datastore for read-"],
             ["fun","bitcask","bitcask:open/2",
              "Open a new or existing bitcask datastore with addi"],
             ["fun","bitcask","bitcask:put/3",
              "Store a key and value in a bitcase datastore."],
             ["fun","bitcask","bitcask:status/1",[]],
             ["fun","bitcask","bitcask:sync/1",
              "Force any writes to sync to disk."],
             ["fun","bitcask","bitcask_app:start/2",[]],
             ["fun","bitcask","bitcask_app:stop/1",[]],
             ["fun","bitcask","bitcask_lockops:acquire/2",
              "Attempt to lock the specified directory with a spe"],
             ["fun","bitcask","bitcask_lockops:delete_stale_lock/2",[]],
             ["fun","bitcask","bitcask_lockops:read_activefile/2",
              "Read the active filename stored in a given lockfil"],
             ["fun","bitcask","bitcask_lockops:release/1",
              "Release a previously acquired write/merge lock."],
             ["fun","bitcask","bitcask_lockops:write_activefile/2",
              "Write a new active filename to an open lockfile."],
             ["fun","bitcask","bitcask_merge_worker:code_change/3",[]],
             ["fun","bitcask","bitcask_merge_worker:handle_call/3",[]],
             ["fun","bitcask","bitcask_merge_worker:handle_cast/2",[]],
             ["fun","bitcask","bitcask_merge_worker:handle_info/2",[]],
             ["fun","bitcask","bitcask_merge_worker:init/1",[]],
             ["fun","bitcask","bitcask_merge_worker:merge/1",[]],
             ["fun","bitcask","bitcask_merge_worker:merge/2",[]],
             ["fun","bitcask","bitcask_merge_worker:merge/3",[]],
             ["fun","bitcask","bitcask_merge_worker:start_link/0",[]],
             ["fun","bitcask","bitcask_merge_worker:terminate/2",[]],
             ["fun","bitcask","bitcask_nifs:create_file/1",[]],
             ["fun","bitcask","bitcask_nifs:init/0",[]],
             ["fun","bitcask","bitcask_nifs:keydir_copy/1",[]],
             ["fun","bitcask","bitcask_nifs:keydir_fold/3",[]],
             ["fun","bitcask","bitcask_nifs:keydir_get/2",[]],
             ["fun","bitcask","bitcask_nifs:keydir_info/1",[]],
             ["fun","bitcask","bitcask_nifs:keydir_mark_ready/1",[]],
             ["fun","bitcask","bitcask_nifs:keydir_new/0",[]],
             ["fun","bitcask","bitcask_nifs:keydir_new/1",[]],
             ["fun","bitcask","bitcask_nifs:keydir_put/6",[]],
             ["fun","bitcask","bitcask_nifs:keydir_release/1",[]],
             ["fun","bitcask","bitcask_nifs:keydir_remove/2",[]],
             ["fun","bitcask","bitcask_nifs:keydir_remove/5",[]],
             ["fun","bitcask","bitcask_nifs:lock_acquire/2",[]],
             ["fun","bitcask","bitcask_nifs:lock_readdata/1",[]],
             ["fun","bitcask","bitcask_nifs:lock_release/1",[]],
             ["fun","bitcask","bitcask_nifs:lock_writedata/2",[]],
             ["fun","bitcask","bitcask_nifs:set_osync/1",[]],
             ["fun","bitcask","bitcask_sup:init/1",[]],
             ["fun","bitcask","bitcask_sup:start_link/0",[]],
             ["app","ebloom","ebloom","[application]"],
             ["mod","ebloom","ebloom",[]],
             ["fun","ebloom","ebloom:clear/1",[]],
             ["fun","ebloom","ebloom:contains/2",[]],
             ["fun","ebloom","ebloom:deserialize/1",[]],
             ["fun","ebloom","ebloom:difference/2",[]],
             ["fun","ebloom","ebloom:effective_fpp/1",[]],
             ["fun","ebloom","ebloom:elements/1",[]],
             ["fun","ebloom","ebloom:insert/2",[]],
             ["fun","ebloom","ebloom:intersect/2",[]],
             ["fun","ebloom","ebloom:new/3",[]],
             ["fun","ebloom","ebloom:serialize/1",[]],
             ["fun","ebloom","ebloom:size/1",[]],
             ["fun","ebloom","ebloom:union/2",[]],
             ["app","eper","eper","[application]"],
             ["mod","eper","bread",[]],
             ["mod","eper","bread_server",[]],
             ["mod","eper","dtop",[]],
             ["mod","eper","dtop_replay",[]],
             ["mod","eper","dtopConsumer",[]],
             ["mod","eper","eper",[]],
             ["mod","eper","gen_serv",[]],
             ["mod","eper","getopt",
              "Parses command line options with a format similar "],
             ["mod","eper","loggerConsumer",[]],
             ["mod","eper","logReader",[]],
             ["mod","eper","ntop",[]],
             ["mod","eper","ntopConsumer",[]],
             ["mod","eper","prf",[]],
             ["mod","eper","prf_crypto",[]],
             ["mod","eper","prfConsumer",[]],
             ["mod","eper","prfDog",[]],
             ["mod","eper","prfHost",[]],
             ["mod","eper","prfNet",[]],
             ["mod","eper","prfPrc",[]],
             ["mod","eper","prfSys",[]],
             ["mod","eper","prfTarg",[]],
             ["mod","eper","prfTrc",[]],
             ["mod","eper","redbug",[]],
             ["mod","eper","redbug_msc",[]],
             ["mod","eper","redbugConsumer",[]],
             ["mod","eper","replay_trc",[]],
             ["mod","eper","watchdog",[]],
             ["mod","eper","watchdogConsumer",[]],
             ["mod","eper","watchdogLogger",[]],
             ["fun","eper","bread:fold/4",[]],
             ["fun","eper","bread:line/3",[]],
             ["fun","eper","bread:sax/3",[]],
             ["fun","eper","bread:term/3",[]],
             ["fun","eper","bread:trc/3",[]],
             ["fun","eper","bread:xml/3",[]],
             ["fun","eper","bread_server:get_bread/0",[]],
             ["fun","eper","bread_server:handle_info/2",[]],
             ["fun","eper","bread_server:init/1",[]],
             ["fun","eper","bread_server:rec_info/1",[]],
             ["fun","eper","bread_server:start/1",[]],
             ["fun","eper","bread_server:start/2",[]],
             ["fun","eper","bread_server:stop/0",[]],
             ["fun","eper","dtop:file/1",[]],
             ["fun","eper","dtop:sort/1",[]],
             ["fun","eper","dtop:start/0",[]],
             ["fun","eper","dtop:start/1",[]],
             ["fun","eper","dtop:start/2",[]],
             ["fun","eper","dtop:stop/0",[]],
             ["fun","eper","dtop_replay:replay/2",[]],
             ["fun","eper","dtop_replay:replay/3",[]],
             ["fun","eper","dtopConsumer:collectors/0",[]],
             ["fun","eper","dtopConsumer:config/2",[]],
             ["fun","eper","dtopConsumer:init/1",[]],
             ["fun","eper","dtopConsumer:terminate/1",[]],
             ["fun","eper","dtopConsumer:tick/2",[]],
             ["fun","eper","eper:main/1",[]],
             ["fun","eper","gen_serv:code_change/3",[]],
             ["fun","eper","gen_serv:get_state/1",[]],
             ["fun","eper","gen_serv:get_state/2",[]],
             ["fun","eper","gen_serv:handle_call/3",[]],
             ["fun","eper","gen_serv:handle_cast/2",[]],
             ["fun","eper","gen_serv:handle_info/2",[]],
             ["fun","eper","gen_serv:init/1",[]],
             ["fun","eper","gen_serv:print_state/1",[]],
             ["fun","eper","gen_serv:shutdown/1",[]],
             ["fun","eper","gen_serv:start/1",[]],
             ["fun","eper","gen_serv:start/2",[]],
             ["fun","eper","gen_serv:stop/1",[]],
             ["fun","eper","gen_serv:terminate/2",[]],
             ["fun","eper","gen_serv:unlink/0",[]],
             ["fun","eper","getopt:parse/2",
              " Parse the command line options and arguments retu"],
             ["fun","eper","getopt:usage/2",
              " Show a message on stdout indicating the command l"],
             ["fun","eper","getopt:usage/3",
              " Show a message on stdout indicating the command l"],
             ["fun","eper","getopt:usage/4",
              " Show a message on stdout indicating the command l"],
             ["fun","eper","loggerConsumer:collectors/0",[]],
             ["fun","eper","loggerConsumer:config/2",[]],
             ["fun","eper","loggerConsumer:init/1",[]],
             ["fun","eper","loggerConsumer:terminate/1",[]],
             ["fun","eper","loggerConsumer:tick/2",[]],
             ["fun","eper","logReader:read/1",[]],
             ["fun","eper","ntop:start/0",[]],
             ["fun","eper","ntop:start/1",[]],
             ["fun","eper","ntop:start/2",[]],
             ["fun","eper","ntop:stop/0",[]],
             ["fun","eper","ntopConsumer:collectors/0",[]],
             ["fun","eper","ntopConsumer:config/2",[]],
             ["fun","eper","ntopConsumer:init/1",[]],
             ["fun","eper","ntopConsumer:terminate/1",[]],
             ["fun","eper","ntopConsumer:tick/2",[]],
             ["fun","eper","prf:config/3",[]],
             ["fun","eper","prf:human/1",[]],
             ["fun","eper","prf:log/2",[]],
             ["fun","eper","prf:start/3",[]],
             ["fun","eper","prf:start/4",[]],
             ["fun","eper","prf:stop/1",[]],
             ["fun","eper","prf:ticker_even/0",[]],
             ["fun","eper","prf:ticker_odd/0",[]],
             ["fun","eper","prf_crypto:decrypt/1",[]],
             ["fun","eper","prf_crypto:decrypt/2",[]],
             ["fun","eper","prf_crypto:encrypt/1",[]],
             ["fun","eper","prf_crypto:encrypt/2",[]],
             ["fun","eper","prfConsumer:collectors/0",[]],
             ["fun","eper","prfConsumer:config/2",[]],
             ["fun","eper","prfConsumer:init/1",[]],
             ["fun","eper","prfConsumer:terminate/1",[]],
             ["fun","eper","prfConsumer:tick/2",[]],
             ["fun","eper","prfDog:collect/1",[]],
             ["fun","eper","prfDog:config/2",[]],
             ["fun","eper","prfHost:config/3",[]],
             ["fun","eper","prfHost:loop/1",[]],
             ["fun","eper","prfHost:start/3",[]],
             ["fun","eper","prfHost:start/4",[]],
             ["fun","eper","prfHost:stop/1",[]],
             ["fun","eper","prfNet:collect/1",[]],
             ["fun","eper","prfNet:config/2",[]],
             ["fun","eper","prfNet:port_info/1",[]],
             ["fun","eper","prfPrc:collect/1",[]],
             ["fun","eper","prfPrc:config/2",[]],
             ["fun","eper","prfPrc:pid_info/1",[]],
             ["fun","eper","prfPrc:pid_info/2",[]],
             ["fun","eper","prfSys:collect/1",[]],
             ["fun","eper","prfSys:config/2",[]],
             ["fun","eper","prfTarg:init/0",[]],
             ["fun","eper","prfTarg:loop/1",[]],
             ["fun","eper","prfTarg:subscribe/3",[]],
             ["fun","eper","prfTarg:unsubscribe/2",[]],
             ["fun","eper","prfTrc:active/1",[]],
             ["fun","eper","prfTrc:collect/1",[]],
             ["fun","eper","prfTrc:config/2",[]],
             ["fun","eper","prfTrc:idle/0",[]],
             ["fun","eper","prfTrc:wait_for_local/1",[]],
             ["fun","eper","redbug:help/0",[]],
             ["fun","eper","redbug:start/1",[]],
             ["fun","eper","redbug:start/2",[]],
             ["fun","eper","redbug:start/3",[]],
             ["fun","eper","redbug:start/4",[]],
             ["fun","eper","redbug:start/5",[]],
             ["fun","eper","redbug:stop/0",[]],
             ["fun","eper","redbug:unix/1",[]],
             ["fun","eper","redbug_msc:transform/1",[]],
             ["fun","eper","redbug_msc:unit/0",[]],
             ["fun","eper","redbugConsumer:collectors/0",[]],
             ["fun","eper","redbugConsumer:config/2",[]],
             ["fun","eper","redbugConsumer:init/1",[]],
             ["fun","eper","redbugConsumer:terminate/1",[]],
             ["fun","eper","redbugConsumer:tick/2",[]],
             ["fun","eper","replay_trc:go/1",[]],
             ["fun","eper","replay_trc:go/2",[]],
             ["fun","eper","replay_trc:go/3",[]],
             ["fun","eper","replay_trc:go/4",[]],
             ["fun","eper","watchdog:add_log_subscriber/1",[]],
             ["fun","eper","watchdog:add_proc_subscriber/1",[]],
             ["fun","eper","watchdog:add_send_subscriber/4",[]],
             ["fun","eper","watchdog:add_trigger/2",[]],
             ["fun","eper","watchdog:clear_subscribers/0",[]],
             ["fun","eper","watchdog:delete_subscriber/1",[]],
             ["fun","eper","watchdog:delete_trigger/1",[]],
             ["fun","eper","watchdog:handle_info/2",[]],
             ["fun","eper","watchdog:init/1",[]],
             ["fun","eper","watchdog:message/1",[]],
             ["fun","eper","watchdog:rec_info/1",[]],
             ["fun","eper","watchdog:start/0",[]],
             ["fun","eper","watchdog:state/0",[]],
             ["fun","eper","watchdog:stop/0",[]],
             ["fun","eper","watchdogConsumer:collectors/0",[]],
             ["fun","eper","watchdogConsumer:config/2",[]],
             ["fun","eper","watchdogConsumer:init/1",[]],
             ["fun","eper","watchdogConsumer:terminate/1",[]],
             ["fun","eper","watchdogConsumer:tick/2",[]],
             ["fun","eper","watchdogLogger:collectors/0",[]],
             ["fun","eper","watchdogLogger:config/2",[]],
             ["fun","eper","watchdogLogger:init/1",[]],
             ["fun","eper","watchdogLogger:terminate/1",[]],
             ["fun","eper","watchdogLogger:tick/2",[]],
             ["app","erlang_js","erlang_js","[application]"],
             ["mod","erlang_js","erlang_js",[]],
             ["mod","erlang_js","erlang_js_sup",
              "Top level supervisor for erlang_js."],
             ["mod","erlang_js","js",
              "Convenience module for interacting with Javascript"],
             ["mod","erlang_js","js_benchmark",
              "Utility module for measuring latencies across the "],
             ["mod","erlang_js","js_cache",
              "This module implements a basic cache."],
             ["mod","erlang_js","js_drv_comm",[]],
             ["mod","erlang_js","js_memory",[]],
             ["mod","erlang_js","js_mochijson2",
              "Yet another JSON (RFC 4627) library for Erlang."],
             ["mod","erlang_js","js_mochinum",
              "Useful numeric algorithms for floats that cover so"],
             ["fun","erlang_js","erlang_js:start/0",
              "Starts the erlang_js OTP application and all\n  dep"],
             ["fun","erlang_js","js:call/1",
              "Call a function by name with a list of arguments a"],
             ["fun","erlang_js","js:call/1",
              "Call a function by name with a list of arguments."],
             ["fun","erlang_js","js:define/1",
              "Define one or more Javascript expressions using a "],
             ["fun","erlang_js","js:define/1",
              "Define one or more Javascript expressions."],
             ["fun","erlang_js","js:eval/1",
              "Evaluate one or more Javascript expressions and re"],
             ["fun","erlang_js","js_benchmark:run/0",
              "Runs the benchmark and returns the average time to"],
             ["fun","erlang_js","js_cache:delete/1",
              "Deletes a key/value pair, if present, from the cac"],
             ["fun","erlang_js","js_cache:fetch/1",
              "Retrieves a key/value pair from the cache."],
             ["fun","erlang_js","js_cache:init/1",[]],
             ["fun","erlang_js","js_cache:store/1","Store a key/value pair."],
             ["fun","erlang_js","js_drv_comm:pack/2",[]],
             ["fun","erlang_js","js_memory:stress/1",[]],
             ["fun","erlang_js","js_mochijson2:decode/1",
              "Decode the given iolist to Erlang terms."],
             ["fun","erlang_js","js_mochijson2:decoder/1",
              "Create a decoder/1 with the given options."],
             ["fun","erlang_js","js_mochijson2:encode/1",
              "Encode the given as JSON to an iolist."],
             ["fun","erlang_js","js_mochijson2:encoder/1",
              "Create an encoder/1 with the given options."],
             ["fun","erlang_js","js_mochinum:digits/1",
              " Returns a string that accurately represents the g"],
             ["fun","erlang_js","js_mochinum:frexp/1",
              " Return the fractional and exponent part of an IEE"],
             ["fun","erlang_js","js_mochinum:int_ceil/1",
              " Return the ceiling of F as an integer."],
             ["fun","erlang_js","js_mochinum:int_pow/1",
              " Moderately efficient way to exponentiate integers"],
             ["fun","erlang_js","js_mochinum:test/0",[]],
             ["app","luke","luke","[application]"],
             ["mod","luke","luke","The main entry point for Luke."],
             ["mod","luke","luke_flow","Manages the execution of a flow."],
             ["mod","luke","luke_flow_cache",[]],
             ["mod","luke","luke_flow_sup",[]],
             ["mod","luke","luke_phase",[]],
             ["mod","luke","luke_phase_sup",[]],
             ["mod","luke","luke_phases",
              "Encapsulates the messaging protocol used during fl"],
             ["mod","luke","luke_sup",[]],
             ["fun","luke","luke:new_flow/2",[]],
             ["fun","luke","luke:new_flow/3",[]],
             ["fun","luke","luke:new_flow/4",[]],
             ["fun","luke","luke:new_flow/5",[]],
             ["fun","luke","luke:new_flow/6",[]],
             ["fun","luke","luke:start/0",[]],
             ["fun","luke","luke:start/2",[]],
             ["fun","luke","luke:stop/1",[]],
             ["fun","luke","luke_flow:add_inputs/1","Add inputs to the flow."],
             ["fun","luke","luke_flow:code_change/4",[]],
             ["fun","luke","luke_flow:collect_output/1",
              "Collects flow output."],
             ["fun","luke","luke_flow:executing/2",[]],
             ["fun","luke","luke_flow:executing/3",[]],
             ["fun","luke","luke_flow:finish_inputs/1",
              "Informs the phases all inputs are complete."],
             ["fun","luke","luke_flow:get_phases/1",
              "Returns the pids for each phase."],
             ["fun","luke","luke_flow:handle_event/3",[]],
             ["fun","luke","luke_flow:handle_info/3",[]],
             ["fun","luke","luke_flow:handle_sync_event/4",[]],
             ["fun","luke","luke_flow:init/1",[]],
             ["fun","luke","luke_flow:start_link/5",[]],
             ["fun","luke","luke_flow:terminate/3",[]],
             ["fun","luke","luke_flow_cache:cache_value/3",[]],
             ["fun","luke","luke_flow_cache:check_cache/2",[]],
             ["fun","luke","luke_flow_cache:code_change/3",[]],
             ["fun","luke","luke_flow_cache:delete_value/2",[]],
             ["fun","luke","luke_flow_cache:handle_call/3",[]],
             ["fun","luke","luke_flow_cache:handle_cast/2",[]],
             ["fun","luke","luke_flow_cache:handle_info/2",[]],
             ["fun","luke","luke_flow_cache:init/1",[]],
             ["fun","luke","luke_flow_cache:start_link/0",[]],
             ["fun","luke","luke_flow_cache:terminate/2",[]],
             ["fun","luke","luke_flow_sup:init/1",[]],
             ["fun","luke","luke_flow_sup:new_flow/4",[]],
             ["fun","luke","luke_flow_sup:new_flow/6",[]],
             ["fun","luke","luke_flow_sup:start_link/0",[]],
             ["fun","luke","luke_phase:behaviour_info/1",[]],
             ["fun","luke","luke_phase:code_change/4",[]],
             ["fun","luke","luke_phase:complete/0",[]],
             ["fun","luke","luke_phase:executing/2",[]],
             ["fun","luke","luke_phase:executing/3",[]],
             ["fun","luke","luke_phase:handle_event/3",[]],
             ["fun","luke","luke_phase:handle_info/3",[]],
             ["fun","luke","luke_phase:handle_sync_event/4",[]],
             ["fun","luke","luke_phase:init/1",[]],
             ["fun","luke","luke_phase:partners/3",[]],
             ["fun","luke","luke_phase:start_link/7",[]],
             ["fun","luke","luke_phase:terminate/3",[]],
             ["fun","luke","luke_phase_sup:init/1",[]],
             ["fun","luke","luke_phase_sup:new_phase/7",[]],
             ["fun","luke","luke_phase_sup:start_link/0",[]],
             ["fun","luke","luke_phases:send_flow_complete/1",
              "Signal completion of flow to the flow pid\n       T"],
             ["fun","luke","luke_phases:send_flow_results/1",
              "Sends flow results to the flow pid\n       This is "],
             ["fun","luke","luke_phases:send_inputs/1",
              "Sends inputs to a phase process\n       If a phase "],
             ["fun","luke","luke_phases:send_inputs_done/1",
              "Signals completion of inputs to a phase\n       or "],
             ["fun","luke","luke_phases:send_sync_inputs/1",
              "Sends inputs to a phase process\n       NOTE: This "],
             ["fun","luke","luke_sup:init/1",[]],
             ["fun","luke","luke_sup:start_link/0",[]],
             ["app","luwak","luwak","[application]"],
             ["mod","luwak","luwak_app",[]],
             ["mod","luwak","luwak_block",[]],
             ["mod","luwak","luwak_checksum",[]],
             ["mod","luwak","luwak_file",[]],
             ["mod","luwak","luwak_get_stream",[]],
             ["mod","luwak","luwak_io",[]],
             ["mod","luwak","luwak_put_stream",[]],
             ["mod","luwak","luwak_tree",[]],
             ["mod","luwak","luwak_tree_utils",[]],
             ["fun","luwak","luwak_app:start/2",[]],
             ["fun","luwak","luwak_app:stop/1",[]],
             ["fun","luwak","luwak_block:create/2",[]],
             ["fun","luwak","luwak_block:data/1",[]],
             ["fun","luwak","luwak_block:name/1",[]],
             ["fun","luwak","luwak_checksum:sha1/2",[]],
             ["fun","luwak","luwak_file:create/1",
              "Create a luwak file handle with the given name and"],
             ["fun","luwak","luwak_file:create/1",
              "Create a luwak file handle with the given name and"],
             ["fun","luwak","luwak_file:delete/1",
              "deletes the named file from luwak."],
             ["fun","luwak","luwak_file:exists/1",
              "Checks for the existence of the named file."],
             ["fun","luwak","luwak_file:get/1",
              "returns a filehandle for the named file."],
             ["fun","luwak","luwak_file:get_attributes/1",
              "Gets the attribute dictionary from the file handle"],
             ["fun","luwak","luwak_file:get_property/1",
              "retrieves the named property from the filehandle."],
             ["fun","luwak","luwak_file:length/1",
              "returns the length in bytes of the file."],
             ["fun","luwak","luwak_file:name/1",
              "returns the name of the given file handle."],
             ["fun","luwak","luwak_file:set_attributes/1",
              "Sets the new attributes, saves them, and returns a"],
             ["fun","luwak","luwak_get_stream:close/1","Closes a get stream."],
             ["fun","luwak","luwak_get_stream:recv/1",
              "Receive will block the calling process until eithe"],
             ["fun","luwak","luwak_get_stream:start/1",
              "Creates and returns a handle to a streaming get."],
             ["fun","luwak","luwak_io:get_range/1",
              "Returns an iolist() for the starting offset and le"],
             ["fun","luwak","luwak_io:put_range/1",
              "Put range performs a synchronous write operation o"],
             ["fun","luwak","luwak_io:truncate/1",
              "Truncates a file to the specified offset."],
             ["fun","luwak","luwak_put_stream:close/1",
              "Signals the stream to close."],
             ["fun","luwak","luwak_put_stream:flush/1",
              "Causes the stream to immediately flush its buffers"],
             ["fun","luwak","luwak_put_stream:ping/1",
              "Pings the stream, resetting the TTL timer."],
             ["fun","luwak","luwak_put_stream:send/2",
              "Sends the given binary to the stream for writing."],
             ["fun","luwak","luwak_put_stream:start/4",[]],
             ["fun","luwak","luwak_put_stream:start_link/1",
              "Starts a stream for writing at the specified offse"],
             ["fun","luwak","luwak_put_stream:status/1",
              "Gets the current filehandle on which the stream is"],
             ["fun","luwak","luwak_tree:block_at/1",[]],
             ["fun","luwak","luwak_tree:get/2",[]],
             ["fun","luwak","luwak_tree:get_range/6",[]],
             ["fun","luwak","luwak_tree:get_range/7",[]],
             ["fun","luwak","luwak_tree:truncate/1",[]],
             ["fun","luwak","luwak_tree:truncate/7",[]],
             ["fun","luwak","luwak_tree:update/4",[]],
             ["fun","luwak","luwak_tree:visualize_tree/2",[]],
             ["fun","luwak","luwak_tree_utils:blocklist_length/1",[]],
             ["fun","luwak","luwak_tree_utils:five_way_split/4",[]],
             ["fun","luwak","luwak_tree_utils:foldrflatmap/3",[]],
             ["fun","luwak","luwak_tree_utils:longest_divisable_subtree/2",[]],
             ["fun","luwak","luwak_tree_utils:longest_divisable_subtree/4",[]],
             ["fun","luwak","luwak_tree_utils:shortest_subtree_split/4",[]],
             ["fun","luwak","luwak_tree_utils:split_at_length/2",[]],
             ["fun","luwak","luwak_tree_utils:split_at_length_left_bias/2",[]],
             ["app","mochiweb","mochiweb","[application]"],
             ["mod","mochiweb","mochifmt",
              "String Formatting for Erlang, inspired by Python 2"],
             ["mod","mochiweb","mochifmt_records",
              "Formatter that understands records."],
             ["mod","mochiweb","mochifmt_std",
              "Template module for a mochifmt formatter."],
             ["mod","mochiweb","mochiglobal",
              "Abuse module constant pools as a \"read-only shared"],
             ["mod","mochiweb","mochihex",
              "Utilities for working with hexadecimal strings."],
             ["mod","mochiweb","mochijson",
              "Yet another JSON (RFC 4627) library for Erlang."],
             ["mod","mochiweb","mochijson2",
              "Yet another JSON (RFC 4627) library for Erlang."],
             ["mod","mochiweb","mochilists",
              "Utility functions for dealing with proplists."],
             ["mod","mochiweb","mochilogfile2",
              "Write newline delimited log files, ensuring that i"],
             ["mod","mochiweb","mochinum",
              "Useful numeric algorithms for floats that cover so"],
             ["mod","mochiweb","mochitemp",
              "Create temporary files and directories."],
             ["mod","mochiweb","mochiutf8",
              "Algorithm to convert any binary to a valid UTF-8 s"],
             ["mod","mochiweb","mochiweb",
              "Start and stop the MochiWeb server."],
             ["mod","mochiweb","mochiweb_acceptor","MochiWeb acceptor."],
             ["mod","mochiweb","mochiweb_app",
              "Callbacks for the mochiweb application."],
             ["mod","mochiweb","mochiweb_charref",
              "Converts HTML 4 charrefs and entities to codepoint"],
             ["mod","mochiweb","mochiweb_cookies",
              "HTTP Cookie parsing and generating (RFC 2109, RFC "],
             ["mod","mochiweb","mochiweb_cover",
              "Workarounds for various cover deficiencies."],
             ["mod","mochiweb","mochiweb_echo",
              "Simple and stupid echo server to demo mochiweb_soc"],
             ["mod","mochiweb","mochiweb_headers",
              "Case preserving (but case insensitive) HTTP Header"],
             ["mod","mochiweb","mochiweb_html",
              "Loosely tokenizes and generates parse trees for HT"],
             ["mod","mochiweb","mochiweb_http","HTTP server."],
             ["mod","mochiweb","mochiweb_io",
              "Utilities for dealing with IO devices (open files)"],
             ["mod","mochiweb","mochiweb_mime",
              "Gives a good MIME type guess based on file extensi"],
             ["mod","mochiweb","mochiweb_multipart",
              "Utilities for parsing multipart/form-data."],
             ["mod","mochiweb","mochiweb_request",
              "MochiWeb HTTP Request abstraction."],
             ["mod","mochiweb","mochiweb_response","Response abstraction."],
             ["mod","mochiweb","mochiweb_skel",[]],
             ["mod","mochiweb","mochiweb_socket",
              "MochiWeb socket - wrapper for plain and ssl socket"],
             ["mod","mochiweb","mochiweb_socket_server",
              "MochiWeb socket server."],
             ["mod","mochiweb","mochiweb_sup",
              "Supervisor for the mochiweb application."],
             ["mod","mochiweb","mochiweb_util",
              "Utilities for parsing and quoting."],
             ["mod","mochiweb","reloader",
              "Erlang module for automatically reloading modified"],
             ["fun","mochiweb","mochifmt:bformat/1",
              "Format Args with Format using Module and return a "],
             ["fun","mochiweb","mochifmt:bformat/1",
              "Format Args with Format and return a binary()."],
             ["fun","mochiweb","mochifmt:convert_field/2",
              "Process Arg according to the given explicit conver"],
             ["fun","mochiweb","mochifmt:f/1",
              "Format Args with Format using Module and return a "],
             ["fun","mochiweb","mochifmt:f/1",
              "Format Args with Format and return a string()."],
             ["fun","mochiweb","mochifmt:format/1",
              "Format Args with Format using Module."],
             ["fun","mochiweb","mochifmt:format/1","Format Args with Format."],
             ["fun","mochiweb","mochifmt:format_field/2",
              "Format Arg with Format."],
             ["fun","mochiweb","mochifmt:format_field/3",
              "Format Arg with Format."],
             ["fun","mochiweb","mochifmt:get_field/1",
              "Consecutively call Module:get_value/2 on parts of "],
             ["fun","mochiweb","mochifmt:get_field/1",
              "Consecutively call get_value/2 on parts of Key del"],
             ["fun","mochiweb","mochifmt:get_value/1",
              "Get the Key from Args."],
             ["fun","mochiweb","mochifmt:tokenize/1",
              "Tokenize a format string into mochifmt's internal "],
             ["fun","mochiweb","mochifmt_records:get_value/2",[]],
             ["fun","mochiweb","mochifmt_std:convert_field/2",[]],
             ["fun","mochiweb","mochifmt_std:format/2",[]],
             ["fun","mochiweb","mochifmt_std:format_field/2",[]],
             ["fun","mochiweb","mochifmt_std:get_field/2",[]],
             ["fun","mochiweb","mochifmt_std:get_value/2",[]],
             ["fun","mochiweb","mochiglobal:delete/1",
              "Delete term stored at K, no-op if non-existent."],
             ["fun","mochiweb","mochiglobal:get/1",
              "Equivalent to get(K, undefined).\n"],
             ["fun","mochiweb","mochiglobal:get/2",
              "Get the term for K or return Default."],
             ["fun","mochiweb","mochiglobal:put/2",
              "Store term V at K, replaces an existing term if pr"],
             ["fun","mochiweb","mochihex:dehex/1",
              "Convert a hex digit to its integer value."],
             ["fun","mochiweb","mochihex:hexdigit/1",
              "Convert an integer less than 16 to a hex digit."],
             ["fun","mochiweb","mochihex:to_bin/1",
              "Convert a hexadecimal string to a binary."],
             ["fun","mochiweb","mochihex:to_hex/1",
              "Convert an iolist to a hexadecimal string."],
             ["fun","mochiweb","mochihex:to_int/1",
              "Convert a hexadecimal string to an integer."],
             ["fun","mochiweb","mochijson2:decode/1",
              "Decode the given iolist to Erlang terms."],
             ["fun","mochiweb","mochijson2:decoder/1",
              "Create a decoder/1 with the given options."],
             ["fun","mochiweb","mochijson2:encode/1",
              "Encode the given as JSON to an iolist."],
             ["fun","mochiweb","mochijson2:encoder/1",
              "Create an encoder/1 with the given options."],
             ["fun","mochiweb","mochijson:binary_decode/1",
              "Decode the given iolist to Erlang terms, using lis"],
             ["fun","mochiweb","mochijson:binary_decoder/1",
              "Create a binary_decoder/1 with the given options."],
             ["fun","mochiweb","mochijson:binary_encode/1",
              "Encode the given as JSON to an iolist, using lists"],
             ["fun","mochiweb","mochijson:binary_encoder/1",
              "Create a binary_encoder/1 with the given options."],
             ["fun","mochiweb","mochijson:decode/1",
              "Decode the given iolist to Erlang terms."],
             ["fun","mochiweb","mochijson:decoder/1",
              "Create a decoder/1 with the given options."],
             ["fun","mochiweb","mochijson:encode/1",
              "Encode the given as JSON to an iolist."],
             ["fun","mochiweb","mochijson:encoder/1",
              "Create an encoder/1 with the given options."],
             ["fun","mochiweb","mochilists:get_value/1",
              "Return the value of Key or Default"],
             ["fun","mochiweb","mochilists:get_value/1",
              "Return the value of Key or undefined."],
             ["fun","mochiweb","mochilists:is_defined/1",
              "Returns true if Propist contains at least one entr"],
             ["fun","mochiweb","mochilists:set_default/1",
              "Return new Proplist with {Key, Value} set if not i"],
             ["fun","mochiweb","mochilists:set_defaults/1",
              "Return new Proplist with {Key, Value} set if not i"],
             ["fun","mochiweb","mochilogfile2:close/1",
              "Close the log file referenced by Handle."],
             ["fun","mochiweb","mochilogfile2:name/1",
              "Return the path of the log file."],
             ["fun","mochiweb","mochilogfile2:open/1",
              "Open the log file Name, creating or appending as n"],
             ["fun","mochiweb","mochilogfile2:write/2",
              "Write IoData to the log file referenced by Handle."],
             ["fun","mochiweb","mochinum:digits/1",
              " Returns a string that accurately represents the g"],
             ["fun","mochiweb","mochinum:frexp/1",
              " Return the fractional and exponent part of an IEE"],
             ["fun","mochiweb","mochinum:int_ceil/1",
              " Return the ceiling of F as an integer."],
             ["fun","mochiweb","mochinum:int_pow/1",
              " Moderately efficient way to exponentiate integers"],
             ["fun","mochiweb","mochitemp:gettempdir/0",
              "Get a usable temporary directory using the first o"],
             ["fun","mochiweb","mochitemp:mkdtemp/0",[]],
             ["fun","mochiweb","mochitemp:mkdtemp/3",[]],
             ["fun","mochiweb","mochitemp:rmtempdir/1",[]],
             ["fun","mochiweb","mochiutf8:bytes_foldl/3",[]],
             ["fun","mochiweb","mochiutf8:bytes_to_codepoints/1",[]],
             ["fun","mochiweb","mochiutf8:codepoint_foldl/3",[]],
             ["fun","mochiweb","mochiutf8:codepoint_to_bytes/1",
              "Convert a unicode codepoint to UTF-8 bytes."],
             ["fun","mochiweb","mochiutf8:len/1",[]],
             ["fun","mochiweb","mochiutf8:read_codepoint/1",[]],
             ["fun","mochiweb","mochiutf8:valid_utf8_bytes/1",[]],
             ["fun","mochiweb","mochiweb:all_loaded/0",[]],
             ["fun","mochiweb","mochiweb:all_loaded/1",[]],
             ["fun","mochiweb","mochiweb:new_request/3",
              "Return a mochiweb_request data structure."],
             ["fun","mochiweb","mochiweb:new_response/2",
              "Return a mochiweb_response data structure."],
             ["fun","mochiweb","mochiweb:reload/0",[]],
             ["fun","mochiweb","mochiweb:start/0",
              "Start the MochiWeb server."],
             ["fun","mochiweb","mochiweb:stop/0","Stop the MochiWeb server."],
             ["fun","mochiweb","mochiweb_acceptor:init/3",[]],
             ["fun","mochiweb","mochiweb_acceptor:start_link/3",[]],
             ["fun","mochiweb","mochiweb_app:start/2",
              "application start callback for mochiweb."],
             ["fun","mochiweb","mochiweb_app:stop/1",
              "application stop callback for mochiweb."],
             ["fun","mochiweb","mochiweb_charref:charref/1",
              "Convert a decimal charref, hex charref, or html en"],
             ["fun","mochiweb","mochiweb_cookies:cookie/1",
              "Generate a Set-Cookie header field tuple."],
             ["fun","mochiweb","mochiweb_cookies:cookie/1",
              "Short-hand for cookie(Key, Value, [])."],
             ["fun","mochiweb","mochiweb_cookies:parse_cookie/1",
              "Parse the contents of a Cookie header field, ignor"],
             ["fun","mochiweb","mochiweb_cover:clause_lookup_table/1",[]],
             ["fun","mochiweb","mochiweb_cover:clause_lookup_table/2",[]],
             ["fun","mochiweb","mochiweb_cover:get_abstract_code/1",[]],
             ["fun","mochiweb","mochiweb_cover:get_beam/1",[]],
             ["fun","mochiweb","mochiweb_cover:get_clauses/2",[]],
             ["fun","mochiweb","mochiweb_echo:loop/1",[]],
             ["fun","mochiweb","mochiweb_echo:start/0",[]],
             ["fun","mochiweb","mochiweb_echo:stop/0",[]],
             ["fun","mochiweb","mochiweb_headers:default/1",
              "Insert the pair into the headers if it does not al"],
             ["fun","mochiweb","mochiweb_headers:default_from_list/1",
              "Insert pairs into the headers for keys that do not"],
             ["fun","mochiweb","mochiweb_headers:delete_any/1",
              "Delete the header corresponding to key if it is pr"],
             ["fun","mochiweb","mochiweb_headers:empty/0",
              "Create an empty headers structure."],
             ["fun","mochiweb","mochiweb_headers:enter/1",
              "Insert the pair into the headers, replacing any pr"],
             ["fun","mochiweb","mochiweb_headers:enter_from_list/1",
              "Insert pairs into the headers, replace any values "],
             ["fun","mochiweb","mochiweb_headers:from_binary/1",
              "Transforms a raw HTTP header into a mochiweb heade"],
             ["fun","mochiweb","mochiweb_headers:from_list/1",
              "Construct a headers() from the given list."],
             ["fun","mochiweb","mochiweb_headers:get_primary_value/1",
              "Return the value of the given header up to the fir"],
             ["fun","mochiweb","mochiweb_headers:get_value/1",
              "Return the value of the given header using a case "],
             ["fun","mochiweb","mochiweb_headers:insert/1",
              "Insert the pair into the headers, merging with any"],
             ["fun","mochiweb","mochiweb_headers:lookup/1",
              "Return the case preserved key and value for the gi"],
             ["fun","mochiweb","mochiweb_headers:make/1",
              "Construct a headers() from the given list."],
             ["fun","mochiweb","mochiweb_headers:to_list/1",
              "Return the contents of the headers."],
             ["fun","mochiweb","mochiweb_html:escape/1",
              "Escape a string such that it's safe for HTML (amp;"],
             ["fun","mochiweb","mochiweb_html:escape_attr/1",
              "Escape a string such that it's safe for HTML attrs"],
             ["fun","mochiweb","mochiweb_html:parse/1",
              "tokenize and then transform the token stream into "],
             ["fun","mochiweb","mochiweb_html:parse_tokens/1",
              "Transform the output of tokens(Doc) into a HTML tr"],
             ["fun","mochiweb","mochiweb_html:to_html/1",
              "Convert a list of html_token() to a HTML document."],
             ["fun","mochiweb","mochiweb_html:to_tokens/1",
              "Convert a html_node() tree to a list of tokens."],
             ["fun","mochiweb","mochiweb_html:tokens/1",
              "Transform the input UTF-8 HTML into a token stream"],
             ["fun","mochiweb","mochiweb_http:after_response/2",[]],
             ["fun","mochiweb","mochiweb_http:default_body/1",[]],
             ["fun","mochiweb","mochiweb_http:loop/2",[]],
             ["fun","mochiweb","mochiweb_http:parse_range_request/1",[]],
             ["fun","mochiweb","mochiweb_http:range_skip_length/2",[]],
             ["fun","mochiweb","mochiweb_http:reentry/1",[]],
             ["fun","mochiweb","mochiweb_http:start/0",[]],
             ["fun","mochiweb","mochiweb_http:start/1",[]],
             ["fun","mochiweb","mochiweb_http:stop/0",[]],
             ["fun","mochiweb","mochiweb_http:stop/1",[]],
             ["fun","mochiweb","mochiweb_io:iodevice_foldl/3",[]],
             ["fun","mochiweb","mochiweb_io:iodevice_foldl/4",[]],
             ["fun","mochiweb","mochiweb_io:iodevice_size/1",[]],
             ["fun","mochiweb","mochiweb_io:iodevice_stream/2",[]],
             ["fun","mochiweb","mochiweb_io:iodevice_stream/3",[]],
             ["fun","mochiweb","mochiweb_mime:from_extension/1",
              "Given a filename extension (e.g."],
             ["fun","mochiweb","mochiweb_multipart:default_file_handler/2",[]],
             ["fun","mochiweb","mochiweb_multipart:parse_form/1",
              "Parse a multipart form from the given request usin"],
             ["fun","mochiweb","mochiweb_multipart:parse_form/1",
              "Parse a multipart form from the given request usin"],
             ["fun","mochiweb","mochiweb_multipart:parse_multipart_request/2",
              []],
             ["fun","mochiweb","mochiweb_multipart:parts_to_body/1",
              "Return {[header()], iolist()} representing the bod"],
             ["fun","mochiweb","mochiweb_multipart:parts_to_multipart_body/1",
              "Return {[header()], iolist()} representing the bod"],
             ["fun","mochiweb","mochiweb_request:accepted_encodings/1",
              "Returns a list of encodings accepted by a request."],
             ["fun","mochiweb","mochiweb_request:cleanup/0",
              "Clean up any junk in the process dictionary, requi"],
             ["fun","mochiweb","mochiweb_request:dump/0",
              "Dump the internal representation to a \"human reada"],
             ["fun","mochiweb","mochiweb_request:get/1",
              "Return the internal representation of the given fi"],
             ["fun","mochiweb","mochiweb_request:get_cookie_value/1",
              "Get the value of the given cookie."],
             ["fun","mochiweb","mochiweb_request:get_header_value/1",
              "Get the value of a given request header."],
             ["fun","mochiweb","mochiweb_request:get_primary_header_value/1",
              []],
             ["fun","mochiweb","mochiweb_request:not_found/0",
              "Alias for not_found([])."],
             ["fun","mochiweb","mochiweb_request:not_found/1",
              "Alias for respond({404, [{\"Content-Type\", \"text/pl"],
             ["fun","mochiweb","mochiweb_request:ok/1",
              "respond({200, [{\"Content-Type\", ContentType} | Hea"],
             ["fun","mochiweb","mochiweb_request:parse_cookie/0",
              "Parse the cookie header."],
             ["fun","mochiweb","mochiweb_request:parse_post/0",
              "Parse an application/x-www-form-urlencoded form PO"],
             ["fun","mochiweb","mochiweb_request:parse_qs/0",
              "Parse the query string of the URL."],
             ["fun","mochiweb","mochiweb_request:recv/1",
              "Receive Length bytes from the client as a binary, "],
             ["fun","mochiweb","mochiweb_request:recv/1",
              "Receive Length bytes from the client as a binary, "],
             ["fun","mochiweb","mochiweb_request:recv_body/0",
              "Receive the body of the HTTP request (defined by C"],
             ["fun","mochiweb","mochiweb_request:recv_body/1",
              "Receive the body of the HTTP request (defined by C"],
             ["fun","mochiweb","mochiweb_request:respond/1",
              "Start the HTTP response with start_response, and s"],
             ["fun","mochiweb","mochiweb_request:send/1",
              "Send data over the socket."],
             ["fun","mochiweb","mochiweb_request:serve_file/2",
              "Serve a file relative to DocRoot."],
             ["fun","mochiweb","mochiweb_request:serve_file/3",
              "Serve a file relative to DocRoot."],
             ["fun","mochiweb","mochiweb_request:should_close/0",
              "Return true if the connection must be closed."],
             ["fun","mochiweb","mochiweb_request:start_raw_response/1",
              "Start the HTTP response by sending the Code HTTP r"],
             ["fun","mochiweb","mochiweb_request:start_response/1",
              "Start the HTTP response by sending the Code HTTP r"],
             ["fun","mochiweb","mochiweb_request:start_response_length/1",
              "Start the HTTP response by sending the Code HTTP r"],
             ["fun","mochiweb","mochiweb_request:stream_body/3",[]],
             ["fun","mochiweb","mochiweb_response:dump/0",
              "Dump the internal representation to a \"human reada"],
             ["fun","mochiweb","mochiweb_response:get/1",
              "Return the internal representation of the given fi"],
             ["fun","mochiweb","mochiweb_response:get_header_value/1",
              "Get the value of the given response header."],
             ["fun","mochiweb","mochiweb_response:send/1",
              "Send data over the socket if the method is not HEA"],
             ["fun","mochiweb","mochiweb_response:write_chunk/1",
              "Write a chunk of a HTTP chunked response."],
             ["fun","mochiweb","mochiweb_skel:skelcopy/2",[]],
             ["fun","mochiweb","mochiweb_socket:accept/1",[]],
             ["fun","mochiweb","mochiweb_socket:close/1",[]],
             ["fun","mochiweb","mochiweb_socket:listen/4",[]],
             ["fun","mochiweb","mochiweb_socket:peername/1",[]],
             ["fun","mochiweb","mochiweb_socket:port/1",[]],
             ["fun","mochiweb","mochiweb_socket:recv/3",[]],
             ["fun","mochiweb","mochiweb_socket:send/2",[]],
             ["fun","mochiweb","mochiweb_socket:setopts/2",[]],
             ["fun","mochiweb","mochiweb_socket:type/1",[]],
             ["fun","mochiweb","mochiweb_socket_server:code_change/3",[]],
             ["fun","mochiweb","mochiweb_socket_server:get/2",[]],
             ["fun","mochiweb","mochiweb_socket_server:handle_call/3",[]],
             ["fun","mochiweb","mochiweb_socket_server:handle_cast/2",[]],
             ["fun","mochiweb","mochiweb_socket_server:handle_info/2",[]],
             ["fun","mochiweb","mochiweb_socket_server:init/1",[]],
             ["fun","mochiweb","mochiweb_socket_server:start/1",[]],
             ["fun","mochiweb","mochiweb_socket_server:stop/1",[]],
             ["fun","mochiweb","mochiweb_socket_server:terminate/2",[]],
             ["fun","mochiweb","mochiweb_sup:init/1",
              "supervisor callback, ensures yaws is in embedded m"],
             ["fun","mochiweb","mochiweb_sup:start_link/0",
              "API for starting the supervisor."],
             ["fun","mochiweb","mochiweb_sup:upgrade/0",
              "Add processes if necessary."],
             ["fun","mochiweb","mochiweb_util:cmd/1",
              "os:cmd(cmd_string(Argv))."],
             ["fun","mochiweb","mochiweb_util:cmd_port/1",
              "open_port({spawn, mochiweb_util:cmd_string(Argv)},"],
             ["fun","mochiweb","mochiweb_util:cmd_status/1",
              "Accumulate the output and exit status from the giv"],
             ["fun","mochiweb","mochiweb_util:cmd_string/1",
              "Create a shell quoted command string from a list o"],
             ["fun","mochiweb","mochiweb_util:guess_mime/1",
              " Guess the mime type of a file by the extension of"],
             ["fun","mochiweb","mochiweb_util:join/1",
              "Join a list of strings or binaries together with t"],
             ["fun","mochiweb","mochiweb_util:make_io/1",[]],
             ["fun","mochiweb","mochiweb_util:parse_header/1",
              " Parse a Content-Type like header, return the main"],
             ["fun","mochiweb","mochiweb_util:parse_qs/1",
              "Parse a query string or application/x-www-form-url"],
             ["fun","mochiweb","mochiweb_util:parse_qvalues/1",
              "Parses a list (given as a string) of elements with"],
             ["fun","mochiweb","mochiweb_util:partition/2",
              "Inspired by Python 2.5's str.partition:\n       par"],
             ["fun","mochiweb","mochiweb_util:path_split/1",
              "Split a path starting from the left, as in URL tra"],
             ["fun","mochiweb","mochiweb_util:pick_accepted_encodings/1",
              "Determines which encodings specified in the given "],
             ["fun","mochiweb","mochiweb_util:quote_plus/1",
              "URL safe encoding of the given term."],
             ["fun","mochiweb","mochiweb_util:record_to_proplist/2",
              "calls record_to_proplist/3 with a default TypeKey "],
             ["fun","mochiweb","mochiweb_util:record_to_proplist/3",
              "Return a proplist of the given Record with each fi"],
             ["fun","mochiweb","mochiweb_util:safe_relative_path/1",
              "Return the reduced version of a relative path or u"],
             ["fun","mochiweb","mochiweb_util:shell_quote/1",
              "Quote a string according to UNIX shell quoting rul"],
             ["fun","mochiweb","mochiweb_util:unquote/1",
              "Unquote a URL encoded string."],
             ["fun","mochiweb","mochiweb_util:urlencode/2",
              "URL encode the property list."],
             ["fun","mochiweb","mochiweb_util:urlsplit/1",
              "Return a 5-tuple, does not expand % escapes."],
             ["fun","mochiweb","mochiweb_util:urlsplit_path/1",
              "Return a 3-tuple, does not expand % escapes."],
             ["fun","mochiweb","mochiweb_util:urlunsplit/5",
              "Assemble a URL from the 5-tuple."],
             ["fun","mochiweb","mochiweb_util:urlunsplit_path/3",
              "Assemble a URL path from the 3-tuple."],
             ["fun","mochiweb","reloader:all_changed/0",
              "Return a list of beam modules that have changed."],
             ["fun","mochiweb","reloader:code_change/3",
              "gen_server code_change callback (trivial)."],
             ["fun","mochiweb","reloader:handle_call/3",
              "gen_server callback."],
             ["fun","mochiweb","reloader:handle_cast/2",
              "gen_server callback."],
             ["fun","mochiweb","reloader:handle_info/2",
              "gen_server callback."],
             ["fun","mochiweb","reloader:init/1",
              "gen_server init, opens the server in an initial st"],
             ["fun","mochiweb","reloader:is_changed/1",
              "true if the loaded module is a beam with a vsn att"],
             ["fun","mochiweb","reloader:reload_modules/1",
              "code:purge/1 and code:load_file/1 the given list o"],
             ["fun","mochiweb","reloader:start/0","Start the reloader."],
             ["fun","mochiweb","reloader:start_link/0","Start the reloader."],
             ["fun","mochiweb","reloader:stop/0","Stop the reloader."],
             ["fun","mochiweb","reloader:terminate/2",
              "gen_server termination callback."],
             ["app","protobuffs","protobuffs","[application]"],
             ["mod","protobuffs","pokemon_pb",[]],
             ["mod","protobuffs","protobuffs",
              "A protcol buffers encoding and decoding module."],
             ["mod","protobuffs","protobuffs_compile",[]],
             ["mod","protobuffs","protobuffs_parser",[]],
             ["fun","protobuffs","pokemon_pb:decode_pikachu/1",[]],
             ["fun","protobuffs","pokemon_pb:encode_pikachu/1",[]],
             ["fun","protobuffs","protobuffs:decode/2",[]],
             ["fun","protobuffs","protobuffs:encode/3",
              "Encode an Erlang data structure into a Protocol Bu"],
             ["fun","protobuffs","protobuffs:read_field_num_and_wire_type/1",
              []],
             ["fun","protobuffs","protobuffs_compile:output/2",[]],
             ["fun","protobuffs","protobuffs_compile:scan_file/1",[]],
             ["fun","protobuffs","protobuffs_parser:parse_file/1",[]],
             ["app","riak_core","riak_core","[application]"],
             ["mod","riak_core","app_helper",[]],
             ["mod","riak_core","bloom",[]],
             ["mod","riak_core","chash",
              "A consistent hashing implementation."],
             ["mod","riak_core","gen_nb_server",[]],
             ["mod","riak_core","gen_server2",[]],
             ["mod","riak_core","json_pp",[]],
             ["mod","riak_core","merkerl",
              "An implementation of Merkle Trees for anti-entropy"],
             ["mod","riak_core","priority_queue",[]],
             ["mod","riak_core","process_proxy",[]],
             ["mod","riak_core","riak_core",[]],
             ["mod","riak_core","riak_core_apl",[]],
             ["mod","riak_core","riak_core_app",[]],
             ["mod","riak_core","riak_core_bucket",
              "Functions for manipulating bucket properties."],
             ["mod","riak_core","riak_core_cinfo_basic",[]],
             ["mod","riak_core","riak_core_claim",
              "The default functions used for claiming partition "],
             ["mod","riak_core","riak_core_gossip",
              "riak_core_gossip takes care of the mechanics of sh"],
             ["mod","riak_core","riak_core_handoff_listener",
              "entry point for TCP-based handoff."],
             ["mod","riak_core","riak_core_handoff_manager",[]],
             ["mod","riak_core","riak_core_handoff_receiver",
              "incoming data handler for TCP-based handoff."],
             ["mod","riak_core","riak_core_node_watcher",[]],
             ["mod","riak_core","riak_core_node_watcher_events",[]],
             ["mod","riak_core","riak_core_ring",
              "riak_core_ring manages a riak node's local view of"],
             ["mod","riak_core","riak_core_ring_events",[]],
             ["mod","riak_core","riak_core_ring_handler",[]],
             ["mod","riak_core","riak_core_ring_manager",
              "the local view of the cluster's ring configuration"],
             ["mod","riak_core","riak_core_ring_util",[]],
             ["mod","riak_core","riak_core_sup",[]],
             ["mod","riak_core","riak_core_test_util",
              "utilities for test scripts."],
             ["mod","riak_core","riak_core_util",
              "Various functions that are useful throughout Riak."],
             ["mod","riak_core","riak_core_vnode_sup",
              "supervise riak_vnode processes."],
             ["mod","riak_core","riak_core_web",
              "Convenience functions for setting up the HTTP inte"],
             ["mod","riak_core","riak_core_wm_urlmap",
              "This module provides a Webmachine resource that li"],
             ["mod","riak_core","slide",
              "Keep track of thing in a sliding time window."],
             ["mod","riak_core","spiraltime",
              "A set of sliding windows for recording N-per-secon"],
             ["mod","riak_core","vclock",
              "A simple Erlang implementation of vector clocks as"],
             ["fun","riak_core","app_helper:get_env/1",
              "The official way to get a value from this applicat"],
             ["fun","riak_core","app_helper:get_env/1",
              "The official way to get a value from the app's env"],
             ["fun","riak_core","app_helper:get_env/1",
              "Retrieve all Key/Value pairs in the env for the sp"],
             ["fun","riak_core","bloom:add/2",[]],
             ["fun","riak_core","bloom:add_element/2",[]],
             ["fun","riak_core","bloom:bloom/1",[]],
             ["fun","riak_core","bloom:bloom/2",[]],
             ["fun","riak_core","bloom:capacity/1",[]],
             ["fun","riak_core","bloom:is_element/2",[]],
             ["fun","riak_core","bloom:member/2",[]],
             ["fun","riak_core","bloom:sbf/1",[]],
             ["fun","riak_core","bloom:sbf/2",[]],
             ["fun","riak_core","bloom:sbf/3",[]],
             ["fun","riak_core","bloom:sbf/4",[]],
             ["fun","riak_core","bloom:size/1",[]],
             ["fun","riak_core","chash:contains_name/1",
              "Return true if named Node owns any partitions in t"],
             ["fun","riak_core","chash:fresh/1","Create a brand new ring."],
             ["fun","riak_core","chash:key_of/1",
              "Given any term used to name an object, produce tha"],
             ["fun","riak_core","chash:lookup/1",
              "Find the Node that owns the partition identified b"],
             ["fun","riak_core","chash:members/1",
              "Return all Nodes that own any partitions in the ri"],
             ["fun","riak_core","chash:merge_rings/1",
              "Return a randomized merge of two rings."],
             ["fun","riak_core","chash:nodes/1",
              "Return the entire set of NodeEntries in the ring."],
             ["fun","riak_core","chash:predecessors/1",
              "Given an object key, return all NodeEntries in rev"],
             ["fun","riak_core","chash:predecessors/3",[]],
             ["fun","riak_core","chash:size/1",
              "Return the number of partitions in the ring."],
             ["fun","riak_core","chash:successors/1",
              "Given an object key, return all NodeEntries in ord"],
             ["fun","riak_core","chash:successors/3",[]],
             ["fun","riak_core","chash:update/1",
              "Make the partition beginning at IndexAsInt owned b"],
             ["fun","riak_core","gen_nb_server:start_link/4",
              "Start server listening on IpAddr:Port."],
             ["fun","riak_core","gen_server2:abcast/2",[]],
             ["fun","riak_core","gen_server2:abcast/3",[]],
             ["fun","riak_core","gen_server2:behaviour_info/1",[]],
             ["fun","riak_core","gen_server2:call/2",[]],
             ["fun","riak_core","gen_server2:call/3",[]],
             ["fun","riak_core","gen_server2:cast/2",[]],
             ["fun","riak_core","gen_server2:enter_loop/3",[]],
             ["fun","riak_core","gen_server2:enter_loop/4",[]],
             ["fun","riak_core","gen_server2:enter_loop/5",[]],
             ["fun","riak_core","gen_server2:format_status/2",[]],
             ["fun","riak_core","gen_server2:init_it/6",[]],
             ["fun","riak_core","gen_server2:multi_call/2",[]],
             ["fun","riak_core","gen_server2:multi_call/3",[]],
             ["fun","riak_core","gen_server2:multi_call/4",[]],
             ["fun","riak_core","gen_server2:pcall/3",[]],
             ["fun","riak_core","gen_server2:pcall/4",[]],
             ["fun","riak_core","gen_server2:pcast/3",[]],
             ["fun","riak_core","gen_server2:print_event/3",[]],
             ["fun","riak_core","gen_server2:reply/2",[]],
             ["fun","riak_core","gen_server2:start/3",[]],
             ["fun","riak_core","gen_server2:start/4",[]],
             ["fun","riak_core","gen_server2:start_link/3",[]],
             ["fun","riak_core","gen_server2:start_link/4",[]],
             ["fun","riak_core","gen_server2:system_code_change/4",[]],
             ["fun","riak_core","gen_server2:system_continue/3",[]],
             ["fun","riak_core","gen_server2:system_terminate/4",[]],
             ["fun","riak_core","gen_server2:wake_hib/7",[]],
             ["fun","riak_core","json_pp:print/1",[]],
             ["fun","riak_core","json_pp:test/0",[]],
             ["fun","riak_core","merkerl:allkeys/1",[]],
             ["fun","riak_core","merkerl:build_tree/1",
              "Build a Merkle tree from a list of KH's of objects"],
             ["fun","riak_core","merkerl:delete/2",[]],
             ["fun","riak_core","merkerl:diff/1",
              "Find the keys of objects which differ between the "],
             ["fun","riak_core","merkerl:insert/2",
              "Insert the KH for a new or changed object into T."],
             ["fun","riak_core","priority_queue:in/2",[]],
             ["fun","riak_core","priority_queue:in/3",[]],
             ["fun","riak_core","priority_queue:is_empty/1",[]],
             ["fun","riak_core","priority_queue:is_queue/1",[]],
             ["fun","riak_core","priority_queue:join/2",[]],
             ["fun","riak_core","priority_queue:len/1",[]],
             ["fun","riak_core","priority_queue:new/0",[]],
             ["fun","riak_core","priority_queue:out/1",[]],
             ["fun","riak_core","priority_queue:out/2",[]],
             ["fun","riak_core","priority_queue:pout/1",[]],
             ["fun","riak_core","priority_queue:to_list/1",[]],
             ["fun","riak_core","process_proxy:init/1",[]],
             ["fun","riak_core","process_proxy:start_link/2",[]],
             ["fun","riak_core","process_proxy:stop/1",[]],
             ["fun","riak_core","riak_core:register_vnode_module/1",[]],
             ["fun","riak_core","riak_core:stop/0",
              "Stop the riak application and the calling process."],
             ["fun","riak_core","riak_core:stop/1",[]],
             ["fun","riak_core","riak_core:vnode_modules/0",[]],
             ["fun","riak_core","riak_core_apl:active_owners/1",[]],
             ["fun","riak_core","riak_core_apl:active_owners/2",[]],
             ["fun","riak_core","riak_core_apl:get_apl/3",[]],
             ["fun","riak_core","riak_core_apl:get_apl/4",[]],
             ["fun","riak_core","riak_core_apl:get_primary_apl/3",[]],
             ["fun","riak_core","riak_core_apl:get_primary_apl/4",[]],
             ["fun","riak_core","riak_core_app:start/2",[]],
             ["fun","riak_core","riak_core_app:stop/1",[]],
             ["fun","riak_core","riak_core_bucket:append_bucket_defaults/1",
              "Add a list of defaults to global list of defaults "],
             ["fun","riak_core","riak_core_bucket:get_bucket/1",
              "Return the complete current list of properties for"],
             ["fun","riak_core","riak_core_bucket:set_bucket/1",
              "Set the given BucketProps in Bucket."],
             ["fun","riak_core","riak_core_cinfo_basic:alarm_info/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:application_info/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:capture_ets_i/1",[]],
             ["fun","riak_core",
              "riak_core_cinfo_basic:capture_net_kernel_i/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:capture_regs/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:central_conf/1",[]],
             ["fun","riak_core",
              "riak_core_cinfo_basic:cluster_info_generator_funs/0",[]],
             ["fun","riak_core","riak_core_cinfo_basic:cluster_info_init/0",
              []],
             ["fun","riak_core","riak_core_cinfo_basic:erlang_memory/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:erlang_statistics/1",
              []],
             ["fun","riak_core","riak_core_cinfo_basic:erlang_system_info/1",
              []],
             ["fun","riak_core","riak_core_cinfo_basic:global_summary/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:inet_db_summary/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:loaded_modules/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:memory_hogs/2",[]],
             ["fun","riak_core","riak_core_cinfo_basic:nodes_info/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:non_zero_mailboxes/1",
              []],
             ["fun","riak_core","riak_core_cinfo_basic:port_info/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:register/0",[]],
             ["fun","riak_core","riak_core_cinfo_basic:registered_names/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:time_and_date/1",[]],
             ["fun","riak_core","riak_core_cinfo_basic:timer_status/1",[]],
             ["fun","riak_core","riak_core_claim:claim_rebalance_n/2",[]],
             ["fun","riak_core","riak_core_claim:default_choose_claim/1",
              "Choose a partition at random."],
             ["fun","riak_core","riak_core_claim:default_choose_claim/2",[]],
             ["fun","riak_core","riak_core_claim:default_wants_claim/1",
              "Want a partition if we currently have less than fl"],
             ["fun","riak_core","riak_core_claim:never_wants_claim/1",
              "For use by nodes that should not claim any partiti"],
             ["fun","riak_core","riak_core_claim:random_choose_claim/1",[]],
             ["fun","riak_core","riak_core_gossip:remove_from_cluster/1",[]],
             ["fun","riak_core","riak_core_gossip:send_ring/1",[]],
             ["fun","riak_core","riak_core_gossip:send_ring/2",[]],
             ["fun","riak_core","riak_core_gossip:start_link/0",[]],
             ["fun","riak_core","riak_core_gossip:stop/0",[]],
             ["fun","riak_core","riak_core_handoff_listener:code_change/3",[]],
             ["fun","riak_core","riak_core_handoff_listener:handle_call/3",[]],
             ["fun","riak_core","riak_core_handoff_listener:handle_cast/2",[]],
             ["fun","riak_core","riak_core_handoff_listener:handle_info/2",[]],
             ["fun","riak_core","riak_core_handoff_listener:init/1",[]],
             ["fun","riak_core","riak_core_handoff_listener:new_connection/2",
              []],
             ["fun","riak_core","riak_core_handoff_listener:sock_opts/0",[]],
             ["fun","riak_core","riak_core_handoff_listener:start_link/0",[]],
             ["fun","riak_core","riak_core_handoff_listener:terminate/2",[]],
             ["fun","riak_core","riak_core_handoff_manager:add_exclusion/2",
              []],
             ["fun","riak_core","riak_core_handoff_manager:code_change/3",[]],
             ["fun","riak_core","riak_core_handoff_manager:get_exclusions/1",
              []],
             ["fun","riak_core",
              "riak_core_handoff_manager:get_handoff_lock/1",[]],
             ["fun","riak_core","riak_core_handoff_manager:handle_call/3",[]],
             ["fun","riak_core","riak_core_handoff_manager:handle_cast/2",[]],
             ["fun","riak_core","riak_core_handoff_manager:handle_info/2",[]],
             ["fun","riak_core","riak_core_handoff_manager:init/1",[]],
             ["fun","riak_core",
              "riak_core_handoff_manager:release_handoff_lock/2",[]],
             ["fun","riak_core",
              "riak_core_handoff_manager:remove_exclusion/2",[]],
             ["fun","riak_core","riak_core_handoff_manager:start_link/0",[]],
             ["fun","riak_core","riak_core_handoff_manager:terminate/2",[]],
             ["fun","riak_core","riak_core_handoff_receiver:code_change/3",[]],
             ["fun","riak_core","riak_core_handoff_receiver:handle_call/3",[]],
             ["fun","riak_core","riak_core_handoff_receiver:handle_cast/2",[]],
             ["fun","riak_core","riak_core_handoff_receiver:handle_info/2",[]],
             ["fun","riak_core","riak_core_handoff_receiver:init/1",[]],
             ["fun","riak_core","riak_core_handoff_receiver:set_socket/2",[]],
             ["fun","riak_core","riak_core_handoff_receiver:start_link/0",[]],
             ["fun","riak_core","riak_core_handoff_receiver:terminate/2",[]],
             ["fun","riak_core","riak_core_node_watcher:avsn/0",[]],
             ["fun","riak_core","riak_core_node_watcher:code_change/3",[]],
             ["fun","riak_core","riak_core_node_watcher:handle_call/3",[]],
             ["fun","riak_core","riak_core_node_watcher:handle_cast/2",[]],
             ["fun","riak_core","riak_core_node_watcher:handle_info/2",[]],
             ["fun","riak_core","riak_core_node_watcher:init/1",[]],
             ["fun","riak_core","riak_core_node_watcher:node_down/0",[]],
             ["fun","riak_core","riak_core_node_watcher:node_up/0",[]],
             ["fun","riak_core","riak_core_node_watcher:nodes/1",[]],
             ["fun","riak_core","riak_core_node_watcher:service_down/1",[]],
             ["fun","riak_core","riak_core_node_watcher:service_up/2",[]],
             ["fun","riak_core","riak_core_node_watcher:services/0",[]],
             ["fun","riak_core","riak_core_node_watcher:services/1",[]],
             ["fun","riak_core","riak_core_node_watcher:start_link/0",[]],
             ["fun","riak_core","riak_core_node_watcher:terminate/2",[]],
             ["fun","riak_core",
              "riak_core_node_watcher_events:add_callback/1",[]],
             ["fun","riak_core","riak_core_node_watcher_events:add_handler/2",
              []],
             ["fun","riak_core",
              "riak_core_node_watcher_events:add_sup_callback/1",[]],
             ["fun","riak_core",
              "riak_core_node_watcher_events:add_sup_handler/2",[]],
             ["fun","riak_core","riak_core_node_watcher_events:code_change/3",
              []],
             ["fun","riak_core","riak_core_node_watcher_events:handle_call/2",
              []],
             ["fun","riak_core",
              "riak_core_node_watcher_events:handle_event/2",[]],
             ["fun","riak_core","riak_core_node_watcher_events:handle_info/2",
              []],
             ["fun","riak_core","riak_core_node_watcher_events:init/1",[]],
             ["fun","riak_core",
              "riak_core_node_watcher_events:service_update/1",[]],
             ["fun","riak_core","riak_core_node_watcher_events:start_link/0",
              []],
             ["fun","riak_core","riak_core_node_watcher_events:terminate/2",
              []],
             ["fun","riak_core","riak_core_ring:all_members/1",
              "Produce a list of all nodes that own any partition"],
             ["fun","riak_core","riak_core_ring:all_owners/1",
              "Provide all ownership information in the form of {"],
             ["fun","riak_core","riak_core_ring:all_preflists/2",
              "Provide every preflist in the ring, truncated at N"],
             ["fun","riak_core","riak_core_ring:diff_nodes/2",
              "For two rings, return the list of owners that have"],
             ["fun","riak_core","riak_core_ring:equal_rings/2",[]],
             ["fun","riak_core","riak_core_ring:fresh/0",
              "This is used only when this node is creating a bra"],
             ["fun","riak_core","riak_core_ring:fresh/1",
              "Equivalent to fresh/0 but allows specification of "],
             ["fun","riak_core","riak_core_ring:fresh/2",
              "Equivalent to fresh/1 but allows specification of "],
             ["fun","riak_core","riak_core_ring:get_meta/2",
              "Return a value from the cluster metadata dict."],
             ["fun","riak_core","riak_core_ring:index_owner/2",
              "Return the node that owns the given index."],
             ["fun","riak_core","riak_core_ring:my_indices/1",
              "Return all partition indices owned by the node exe"],
             ["fun","riak_core","riak_core_ring:num_partitions/1",
              "Return the number of partitions in this Riak ring."],
             ["fun","riak_core","riak_core_ring:owner_node/1",
              "Return the node that is responsible for a given ch"],
             ["fun","riak_core","riak_core_ring:preflist/2",
              "For a given object key, produce the ordered list o"],
             ["fun","riak_core","riak_core_ring:random_node/1",
              "Return a randomly-chosen node from amongst the own"],
             ["fun","riak_core","riak_core_ring:random_other_index/1",
              "Return a partition index not owned by the node exe"],
             ["fun","riak_core","riak_core_ring:random_other_index/2",[]],
             ["fun","riak_core","riak_core_ring:random_other_node/1",
              "Return a randomly-chosen node from amongst the own"],
             ["fun","riak_core","riak_core_ring:reconcile/2",
              "Incorporate another node's state into our view of "],
             ["fun","riak_core","riak_core_ring:rename_node/3",
              " Rename OldNode to NewNode in a Riak ring."],
             ["fun","riak_core","riak_core_ring:transfer_node/3",[]],
             ["fun","riak_core","riak_core_ring:update_meta/3",
              "Set a key in the cluster metadata dict."],
             ["fun","riak_core","riak_core_ring_events:add_callback/1",[]],
             ["fun","riak_core","riak_core_ring_events:add_handler/2",[]],
             ["fun","riak_core","riak_core_ring_events:add_sup_callback/1",[]],
             ["fun","riak_core","riak_core_ring_events:add_sup_handler/2",[]],
             ["fun","riak_core","riak_core_ring_events:code_change/3",[]],
             ["fun","riak_core","riak_core_ring_events:force_sync_update/0",
              []],
             ["fun","riak_core","riak_core_ring_events:force_update/0",[]],
             ["fun","riak_core","riak_core_ring_events:handle_call/2",[]],
             ["fun","riak_core","riak_core_ring_events:handle_event/2",[]],
             ["fun","riak_core","riak_core_ring_events:handle_info/2",[]],
             ["fun","riak_core","riak_core_ring_events:init/1",[]],
             ["fun","riak_core","riak_core_ring_events:ring_sync_update/1",[]],
             ["fun","riak_core","riak_core_ring_events:ring_update/1",[]],
             ["fun","riak_core","riak_core_ring_events:start_link/0",[]],
             ["fun","riak_core","riak_core_ring_events:terminate/2",[]],
             ["fun","riak_core","riak_core_ring_handler:code_change/3",[]],
             ["fun","riak_core","riak_core_ring_handler:handle_call/2",[]],
             ["fun","riak_core","riak_core_ring_handler:handle_event/2",[]],
             ["fun","riak_core","riak_core_ring_handler:handle_info/2",[]],
             ["fun","riak_core","riak_core_ring_handler:init/1",[]],
             ["fun","riak_core","riak_core_ring_handler:terminate/2",[]],
             ["fun","riak_core","riak_core_ring_manager:do_write_ringfile/1",
              []],
             ["fun","riak_core",
              "riak_core_ring_manager:find_latest_ringfile/0",[]],
             ["fun","riak_core","riak_core_ring_manager:get_my_ring/0",[]],
             ["fun","riak_core","riak_core_ring_manager:handle_call/3",[]],
             ["fun","riak_core","riak_core_ring_manager:handle_cast/2",[]],
             ["fun","riak_core","riak_core_ring_manager:handle_info/2",[]],
             ["fun","riak_core","riak_core_ring_manager:init/1",[]],
             ["fun","riak_core","riak_core_ring_manager:prune_ringfiles/0",[]],
             ["fun","riak_core","riak_core_ring_manager:read_ringfile/1",[]],
             ["fun","riak_core","riak_core_ring_manager:ring_trans/2",[]],
             ["fun","riak_core","riak_core_ring_manager:set_my_ring/1",[]],
             ["fun","riak_core","riak_core_ring_manager:set_ring_global/1",[]],
             ["fun","riak_core","riak_core_ring_manager:start_link/0",[]],
             ["fun","riak_core","riak_core_ring_manager:start_link/1",[]],
             ["fun","riak_core","riak_core_ring_manager:write_ringfile/0",[]],
             ["fun","riak_core","riak_core_ring_util:assign/2",
              "Forcibly assign a partition to a specific node."],
             ["fun","riak_core","riak_core_ring_util:check_ring/0",
              "Check the local ring for any preflists that do not"],
             ["fun","riak_core","riak_core_ring_util:check_ring/1",
              "Check a ring for any preflists that do not satisfy"],
             ["fun","riak_core","riak_core_sup:init/1",[]],
             ["fun","riak_core","riak_core_sup:start_link/0",[]],
             ["fun","riak_core","riak_core_test_util:setup_mockring1/0",[]],
             ["fun","riak_core","riak_core_util:chash_bucketonly_keyfun/1",
              "Object/ring hashing fun that ignores Key, only use"],
             ["fun","riak_core","riak_core_util:chash_key/1",
              "Create a binary used for determining replica place"],
             ["fun","riak_core","riak_core_util:chash_std_keyfun/1",
              "Default object/ring hashing fun, direct passthroug"],
             ["fun","riak_core","riak_core_util:compare_dates/1",
              "Compare two RFC1123 date strings or two now() tupl"],
             ["fun","riak_core","riak_core_util:integer_to_list/1",
              "Convert an integer to its string representation in"],
             ["fun","riak_core","riak_core_util:make_tmp_dir/0",
              "Create a unique directory in /tmp."],
             ["fun","riak_core","riak_core_util:mkclientid/1",
              "Create a unique-enough id for vclock clients."],
             ["fun","riak_core","riak_core_util:moment/0",
              "Get the current \"moment\"."],
             ["fun","riak_core","riak_core_util:reload_all/1",
              "Ask each member node of the riak ring to reload th"],
             ["fun","riak_core","riak_core_util:rpc_every_member/1",
              "Make an RPC call to the given module and function "],
             ["fun","riak_core","riak_core_util:start_app_deps/1",
              "Start depedent applications of App."],
             ["fun","riak_core","riak_core_util:str_to_node/1",[]],
             ["fun","riak_core","riak_core_util:unique_id_62/0",
              "Create a random identifying integer, returning its"],
             ["fun","riak_core","riak_core_vnode_sup:start_link/0",[]],
             ["fun","riak_core","riak_core_vnode_sup:start_vnode/2",[]],
             ["fun","riak_core","riak_core_web:config/0",
              "Returns the standard Webmachine configuration."],
             ["fun","riak_core",
              "riak_core_wm_urlmap:content_types_provided/2",[]],
             ["fun","riak_core","riak_core_wm_urlmap:init/1",[]],
             ["fun","riak_core","riak_core_wm_urlmap:resource_exists/2",[]],
             ["fun","riak_core","riak_core_wm_urlmap:to_html/2",[]],
             ["fun","riak_core","riak_core_wm_urlmap:to_json/2",[]],
             ["fun","riak_core","slide:fresh/0","Equivalent to fresh(60).\n"],
             ["fun","riak_core","slide:fresh/1",
              "Create an empty slide for tracking Window-seconds "],
             ["fun","riak_core","slide:fresh/1",
              "Equivalent to fresh(Window, Window * 2).\n"],
             ["fun","riak_core","slide:mean/1",
              "Mean of readings from Moment through Seconds secon"],
             ["fun","riak_core","slide:mean/1",
              "Mean of readings from Moment through Window second"],
             ["fun","riak_core","slide:mean/1",
              "Mean of readings from now through Window seconds a"],
             ["fun","riak_core","slide:moment/0",
              "Get the current time in seconds."],
             ["fun","riak_core","slide:nines/1",
              "Median, 95%, 99%, and 100% readings from Moment th"],
             ["fun","riak_core","slide:nines/1",
              "Median, 95%, 99%, and 100% readings from Moment th"],
             ["fun","riak_core","slide:nines/1",
              "Median, 95%, 99%, and 100% readings from now throu"],
             ["fun","riak_core","slide:sum/1",
              "Sum of readings from Moment through Seconds second"],
             ["fun","riak_core","slide:sum/1",
              "Sum of readings from Moment through Window seconds"],
             ["fun","riak_core","slide:sum/1",
              "Sum of readings from now through Window seconds ag"],
             ["fun","riak_core","slide:update/1","Store a new reading."],
             ["fun","riak_core","slide:update/1",
              "Equivalent to update(S, Reading, moment()).\n"],
             ["fun","riak_core","spiraltime:fresh/0",
              "Create an empty spiral with which to begin recordi"],
             ["fun","riak_core","spiraltime:fresh/1",
              "Create an empty spiral with which to begin recordi"],
             ["fun","riak_core","spiraltime:incr/1",
              "Add N to the counter of events occurring at Moment"],
             ["fun","riak_core","spiraltime:incr/1",
              "Add N to the counter of events, as recently as pos"],
             ["fun","riak_core","spiraltime:n/0",[]],
             ["fun","riak_core","spiraltime:rep_day/1",
              "Produce the approximate number of entries recorded"],
             ["fun","riak_core","spiraltime:rep_hour/1",
              "Produce the approximate number of entries recorded"],
             ["fun","riak_core","spiraltime:rep_minute/1",
              "Produce the number of entries recorded in the last"],
             ["fun","riak_core","spiraltime:rep_second/1",
              "Produce the number of entries recorded in the last"],
             ["fun","riak_core","spiraltime:rep_week/1",
              "Produce the approximate number of entries recorded"],
             ["fun","riak_core","spiraltime:test_spiraltime/0",[]],
             ["fun","riak_core","vclock:all_nodes/1",
              "Return the list of all nodes that have ever increm"],
             ["fun","riak_core","vclock:descends/2",
              "Return true if Va is a direct descendant of Vb, el"],
             ["fun","riak_core","vclock:equal/2",
              "Compares two VClocks for equality."],
             ["fun","riak_core","vclock:fresh/0","Create a brand new vclock."],
             ["fun","riak_core","vclock:get_counter/2",
              "Get the counter value in VClock set from Node."],
             ["fun","riak_core","vclock:get_timestamp/2",
              "Get the timestamp value in a VClock set from Node."],
             ["fun","riak_core","vclock:increment/2",
              "Increment VClock at Node."],
             ["fun","riak_core","vclock:merge/1",
              "Combine all VClocks in the input list into their l"],
             ["fun","riak_core","vclock:prune/3",
              "Possibly shrink the size of a vclock, depending on"],
             ["app","riak_err","riak_err","[application]"],
             ["mod","riak_err","riak_err_app",
              "A memory-limited info/error/warning event handler."],
             ["mod","riak_err","riak_err_handler",
              "A memory-limited info/error/warning event handler."],
             ["mod","riak_err","riak_err_monitor",
              "Small server to monitor the riak_err custom SASL e"],
             ["mod","riak_err","riak_err_stdlib",
              "Functions from Erlang OTP distribution that are re"],
             ["mod","riak_err","riak_err_sup",[]],
             ["mod","riak_err","trunc_io",
              "Module to print out terms for logging."],
             ["fun","riak_err","riak_err_app:start/0",[]],
             ["fun","riak_err","riak_err_app:start/2",[]],
             ["fun","riak_err","riak_err_app:stop/1",[]],
             ["fun","riak_err","riak_err_handler:add_sup_handler/0",
              "Add a supervised handler to the OTP kernel's\n     "],
             ["fun","riak_err","riak_err_handler:code_change/3",[]],
             ["fun","riak_err","riak_err_handler:get_state/0",
              "Debugging: get internal state record."],
             ["fun","riak_err","riak_err_handler:handle_call/2",[]],
             ["fun","riak_err","riak_err_handler:handle_event/2",[]],
             ["fun","riak_err","riak_err_handler:handle_info/2",[]],
             ["fun","riak_err","riak_err_handler:init/1",[]],
             ["fun","riak_err","riak_err_handler:reopen_log_file/0",
              "Tell our error handler to reopen the sasl_error_lo"],
             ["fun","riak_err","riak_err_handler:set_fmt_max_bytes/1",
              "Change the internal value of set_fmt_max_bytes."],
             ["fun","riak_err","riak_err_handler:set_term_max_size/1",
              "Change the internal value of set_term_max_size."],
             ["fun","riak_err","riak_err_handler:terminate/2",[]],
             ["fun","riak_err","riak_err_monitor:code_change/3",[]],
             ["fun","riak_err","riak_err_monitor:handle_call/3",[]],
             ["fun","riak_err","riak_err_monitor:handle_cast/2",[]],
             ["fun","riak_err","riak_err_monitor:handle_info/2",[]],
             ["fun","riak_err","riak_err_monitor:init/1",[]],
             ["fun","riak_err","riak_err_monitor:start_link/0",[]],
             ["fun","riak_err","riak_err_monitor:stop/0",[]],
             ["fun","riak_err","riak_err_monitor:terminate/2",[]],
             ["fun","riak_err","riak_err_stdlib:is_my_error_report/1",[]],
             ["fun","riak_err","riak_err_stdlib:is_my_info_report/1",[]],
             ["fun","riak_err","riak_err_stdlib:maybe_utc/1",[]],
             ["fun","riak_err","riak_err_stdlib:proc_lib_format/2",[]],
             ["fun","riak_err","riak_err_stdlib:sup_get/2",[]],
             ["fun","riak_err","riak_err_stdlib:write_time/2",[]],
             ["fun","riak_err","riak_err_sup:init/1",[]],
             ["fun","riak_err","riak_err_sup:start_link/0",[]],
             ["fun","riak_err","trunc_io:fprint/2",
              "Returns an flattened list containing the ASCII rep"],
             ["fun","riak_err","trunc_io:perf/0",[]],
             ["fun","riak_err","trunc_io:perf/3",[]],
             ["fun","riak_err","trunc_io:perf1/0",[]],
             ["fun","riak_err","trunc_io:print/2","Returns {List, Length}."],
             ["fun","riak_err","trunc_io:safe/2",
              "Same as print, but never crashes."],
             ["fun","riak_err","trunc_io:test/0",[]],
             ["fun","riak_err","trunc_io:test/2",[]],
             ["app","riak_kv","riak_kv","[application]"],
             ["mod","riak_kv","lk",[]],
             ["mod","riak_kv","raw_link_walker",[]],
             ["mod","riak_kv","riak",[]],
             ["mod","riak_kv","riak_kv_app",
              "Bootstrapping the Riak application."],
             ["mod","riak_kv","riak_kv_backend",[]],
             ["mod","riak_kv","riak_kv_backup",
              "utilities for backup and restore of Riak nodes and"],
             ["mod","riak_kv","riak_kv_bitcask_backend",[]],
             ["mod","riak_kv","riak_kv_cache_backend",
              "riak_kv_cache_backend is a backend that turns a bu"],
             ["mod","riak_kv","riak_kv_console",
              "interface for Riak admin commands."],
             ["mod","riak_kv","riak_kv_delete","two-step object deletion."],
             ["mod","riak_kv","riak_kv_dets_backend",
              "riak_kv_dets_backend is a Riak storage backend usi"],
             ["mod","riak_kv","riak_kv_ets_backend",
              "riak_kv_ets_backend is a Riak storage backend usin"],
             ["mod","riak_kv","riak_kv_fs_backend",
              "riak_kv_fs_backend is a simple filesystem storage "],
             ["mod","riak_kv","riak_kv_gb_trees_backend",
              "riak_kv_gb_trees_backend is a Riak storage backend"],
             ["mod","riak_kv","riak_kv_get_fsm",[]],
             ["mod","riak_kv","riak_kv_js_manager",
              "dispatch work to JavaScript VMs."],
             ["mod","riak_kv","riak_kv_js_sup","supervise JavaScript VMs."],
             ["mod","riak_kv","riak_kv_js_vm",
              "interaction with JavaScript VMs."],
             ["mod","riak_kv","riak_kv_keylister",[]],
             ["mod","riak_kv","riak_kv_keylister_master",[]],
             ["mod","riak_kv","riak_kv_keylister_sup",[]],
             ["mod","riak_kv","riak_kv_keys_fsm","listing of bucket keys."],
             ["mod","riak_kv","riak_kv_lru",[]],
             ["mod","riak_kv","riak_kv_map_executor",
              "perform work for map-phase jobs."],
             ["mod","riak_kv","riak_kv_map_localphase",
              "node-local portion of map-phase management."],
             ["mod","riak_kv","riak_kv_map_phase",[]],
             ["mod","riak_kv","riak_kv_mapred_json",
              "JSON parsing for mapreduce."],
             ["mod","riak_kv","riak_kv_mapred_query",
              "riak_kv_mapred_query is the driver of a mapreduce "],
             ["mod","riak_kv","riak_kv_mapred_term",
              "Term parsing for mapreduce."],
             ["mod","riak_kv","riak_kv_mapreduce",
              "Convenience functions for defining common map/redu"],
             ["mod","riak_kv","riak_kv_multi_backend",[]],
             ["mod","riak_kv","riak_kv_pb_listener",
              "entry point for TCP-based protocol buffers service"],
             ["mod","riak_kv","riak_kv_pb_socket",
              "service protocol buffer clients."],
             ["mod","riak_kv","riak_kv_pb_socket_sup",
              "supervise riak_kv_pb_socket processes."],
             ["mod","riak_kv","riak_kv_phase_proto",
              "prototype for riak dataflow phases."],
             ["mod","riak_kv","riak_kv_reduce_phase",
              "manage the mechanics of a reduce phase of a MR job"],
             ["mod","riak_kv","riak_kv_stat",
              "riak_kv_stat is a long-lived gen_server process fo"],
             ["mod","riak_kv","riak_kv_sup",
              "supervise the core Riak services."],
             ["mod","riak_kv","riak_kv_test_util",
              "utilities for test scripts."],
             ["mod","riak_kv","riak_kv_web",
              "Convenience functions for setting up the HTTP inte"],
             ["mod","riak_kv","riak_kv_wm_link_walker",
              "Raw link walker resource provides an interface to "],
             ["mod","riak_kv","riak_kv_wm_mapred",
              "webmachine resource for mapreduce requests."],
             ["mod","riak_kv","riak_kv_wm_ping",
              "simple Webmachine resource for availability test."],
             ["mod","riak_kv","riak_kv_wm_stats",[]],
             ["mod","riak_kv","riak_object",
              "container for Riak data and metadata."],
             ["fun","riak_kv","lk:fsm/1",[]],
             ["fun","riak_kv","raw_link_walker:mapreduce_linkfun/3",[]],
             ["fun","riak_kv","riak:client_connect/1",
              "The usual way to get a client."],
             ["fun","riak_kv","riak:client_connect/1",
              "Equivalent to client_connect(Node, undefined).\n"],
             ["fun","riak_kv","riak:client_test/1",
              "Validate that a specified node is accessible and f"],
             ["fun","riak_kv","riak:code_hash/0",[]],
             ["fun","riak_kv","riak:get_app_env/0",
              "Retrieve all values set in riak's configuration fi"],
             ["fun","riak_kv","riak:get_app_env/1",
              "The official way to get the values set in riak's c"],
             ["fun","riak_kv","riak:get_app_env/1",
              "The official way to get the values set in riak's c"],
             ["fun","riak_kv","riak:join/1",
              "Join the ring found on the specified remote node."],
             ["fun","riak_kv","riak:local_client/0",
              "Equivalent to local_client(undefined).\n"],
             ["fun","riak_kv","riak:local_client/1",
              "When you want a client for use on a running Riak n"],
             ["fun","riak_kv","riak:stop/0",
              "Stop the riak application and the calling process."],
             ["fun","riak_kv","riak:stop/1",[]],
             ["fun","riak_kv","riak_kv_app:start/1",
              "The application:start callback for riak."],
             ["fun","riak_kv","riak_kv_app:stop/1",
              "The application:stop callback for riak."],
             ["fun","riak_kv","riak_kv_backend:behaviour_info/1",[]],
             ["fun","riak_kv","riak_kv_backend:callback_after/3",[]],
             ["fun","riak_kv","riak_kv_backend:standard_test/2",[]],
             ["fun","riak_kv","riak_kv_backup:backup/3",
              "\n  Connect to the cluster of which EntryNode is a "],
             ["fun","riak_kv","riak_kv_backup:restore/2",
              "\n  Read data from the specified file created by ba"],
             ["fun","riak_kv","riak_kv_bitcask_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:fold_keys/3",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:start/2",[]],
             ["fun","riak_kv","riak_kv_bitcask_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_cache_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_cache_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_cache_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_cache_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_cache_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_cache_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_cache_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_cache_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_cache_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_cache_backend:start/1",[]],
             ["fun","riak_kv","riak_kv_cache_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_console:join/1",[]],
             ["fun","riak_kv","riak_kv_console:leave/1",[]],
             ["fun","riak_kv","riak_kv_console:reip/1",[]],
             ["fun","riak_kv","riak_kv_console:remove/1",[]],
             ["fun","riak_kv","riak_kv_console:ringready/1",[]],
             ["fun","riak_kv","riak_kv_console:status/1",[]],
             ["fun","riak_kv","riak_kv_console:transfers/1",[]],
             ["fun","riak_kv","riak_kv_delete:delete/1",
              "Delete the object at Bucket/Key."],
             ["fun","riak_kv","riak_kv_dets_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_dets_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_dets_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_dets_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_dets_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_dets_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_dets_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_dets_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_dets_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_dets_backend:start/1",[]],
             ["fun","riak_kv","riak_kv_dets_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_ets_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_ets_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_ets_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_ets_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_ets_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_ets_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_ets_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_ets_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_ets_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_ets_backend:start/1",[]],
             ["fun","riak_kv","riak_kv_ets_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_fs_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_fs_backend:delete/1",
              "Delete the object stored at BKey."],
             ["fun","riak_kv","riak_kv_fs_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_fs_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_fs_backend:get/1",
              "Get the object stored at the given bucket/key pair"],
             ["fun","riak_kv","riak_kv_fs_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_fs_backend:list/1",
              "Get a list of all bucket/key pairs stored by this "],
             ["fun","riak_kv","riak_kv_fs_backend:list_bucket/1",
              "Get a list of the keys in a bucket."],
             ["fun","riak_kv","riak_kv_fs_backend:put/1",
              "Store Val under Bkey."],
             ["fun","riak_kv","riak_kv_fs_backend:start/1",
              "Start this backend."],
             ["fun","riak_kv","riak_kv_fs_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:start/1",[]],
             ["fun","riak_kv","riak_kv_gb_trees_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_get_fsm:start/6",[]],
             ["fun","riak_kv","riak_kv_get_fsm:waiting_read_repair/2",[]],
             ["fun","riak_kv","riak_kv_get_fsm:waiting_vnode_r/2",[]],
             ["fun","riak_kv","riak_kv_js_manager:add_vm/0",[]],
             ["fun","riak_kv","riak_kv_js_manager:blocking_dispatch/2",[]],
             ["fun","riak_kv","riak_kv_js_manager:code_change/3",[]],
             ["fun","riak_kv","riak_kv_js_manager:dispatch/2",[]],
             ["fun","riak_kv","riak_kv_js_manager:handle_call/3",[]],
             ["fun","riak_kv","riak_kv_js_manager:handle_cast/2",[]],
             ["fun","riak_kv","riak_kv_js_manager:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_js_manager:init/1",[]],
             ["fun","riak_kv","riak_kv_js_manager:mark_idle/0",[]],
             ["fun","riak_kv","riak_kv_js_manager:pool_size/0",[]],
             ["fun","riak_kv","riak_kv_js_manager:reload/0",[]],
             ["fun","riak_kv","riak_kv_js_manager:reload/1",[]],
             ["fun","riak_kv","riak_kv_js_manager:reserve_vm/0",[]],
             ["fun","riak_kv","riak_kv_js_manager:start_link/1",[]],
             ["fun","riak_kv","riak_kv_js_manager:terminate/2",[]],
             ["fun","riak_kv","riak_kv_js_sup:start_js/1",[]],
             ["fun","riak_kv","riak_kv_js_sup:start_link/0",[]],
             ["fun","riak_kv","riak_kv_js_sup:stop/1",[]],
             ["fun","riak_kv","riak_kv_js_vm:blocking_dispatch/3",[]],
             ["fun","riak_kv","riak_kv_js_vm:code_change/3",[]],
             ["fun","riak_kv","riak_kv_js_vm:dispatch/4",[]],
             ["fun","riak_kv","riak_kv_js_vm:handle_call/3",[]],
             ["fun","riak_kv","riak_kv_js_vm:handle_cast/2",[]],
             ["fun","riak_kv","riak_kv_js_vm:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_js_vm:init/1",[]],
             ["fun","riak_kv","riak_kv_js_vm:reload/1",[]],
             ["fun","riak_kv","riak_kv_js_vm:start_link/1",[]],
             ["fun","riak_kv","riak_kv_js_vm:terminate/2",[]],
             ["fun","riak_kv","riak_kv_keylister:code_change/4",[]],
             ["fun","riak_kv","riak_kv_keylister:handle_event/3",[]],
             ["fun","riak_kv","riak_kv_keylister:handle_info/3",[]],
             ["fun","riak_kv","riak_kv_keylister:handle_sync_event/4",[]],
             ["fun","riak_kv","riak_kv_keylister:init/1",[]],
             ["fun","riak_kv","riak_kv_keylister:list_keys/2",[]],
             ["fun","riak_kv","riak_kv_keylister:start_link/3",[]],
             ["fun","riak_kv","riak_kv_keylister:state_name/2",[]],
             ["fun","riak_kv","riak_kv_keylister:state_name/3",[]],
             ["fun","riak_kv","riak_kv_keylister:terminate/3",[]],
             ["fun","riak_kv","riak_kv_keylister:waiting/2",[]],
             ["fun","riak_kv","riak_kv_keylister_master:code_change/3",[]],
             ["fun","riak_kv","riak_kv_keylister_master:handle_call/3",[]],
             ["fun","riak_kv","riak_kv_keylister_master:handle_cast/2",[]],
             ["fun","riak_kv","riak_kv_keylister_master:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_keylister_master:init/1",[]],
             ["fun","riak_kv","riak_kv_keylister_master:start_keylist/3",[]],
             ["fun","riak_kv","riak_kv_keylister_master:start_link/0",[]],
             ["fun","riak_kv","riak_kv_keylister_master:terminate/2",[]],
             ["fun","riak_kv","riak_kv_keylister_sup:init/1",[]],
             ["fun","riak_kv","riak_kv_keylister_sup:new_lister/3",[]],
             ["fun","riak_kv","riak_kv_keylister_sup:start_link/0",[]],
             ["fun","riak_kv","riak_kv_keys_fsm:start/6",[]],
             ["fun","riak_kv","riak_kv_keys_fsm:waiting_kl/2",[]],
             ["fun","riak_kv","riak_kv_lru:clear/1",[]],
             ["fun","riak_kv","riak_kv_lru:clear_bkey/2",[]],
             ["fun","riak_kv","riak_kv_lru:destroy/1",[]],
             ["fun","riak_kv","riak_kv_lru:fetch/3",[]],
             ["fun","riak_kv","riak_kv_lru:max_size/1",[]],
             ["fun","riak_kv","riak_kv_lru:new/1",[]],
             ["fun","riak_kv","riak_kv_lru:put/4",[]],
             ["fun","riak_kv","riak_kv_lru:remove/3",[]],
             ["fun","riak_kv","riak_kv_lru:size/1",[]],
             ["fun","riak_kv","riak_kv_map_executor:start_link/5",[]],
             ["fun","riak_kv","riak_kv_map_executor:wait/2",[]],
             ["fun","riak_kv","riak_kv_map_localphase:start_link/5",[]],
             ["fun","riak_kv","riak_kv_map_localphase:wait/2",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_event/2",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_input/3",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_input_done/1",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_sync_event/3",[]],
             ["fun","riak_kv","riak_kv_map_phase:handle_timeout/1",[]],
             ["fun","riak_kv","riak_kv_map_phase:init/1",[]],
             ["fun","riak_kv","riak_kv_map_phase:terminate/2",[]],
             ["fun","riak_kv","riak_kv_mapred_json:dejsonify_not_found/1",[]],
             ["fun","riak_kv","riak_kv_mapred_json:jsonify_not_found/1",[]],
             ["fun","riak_kv","riak_kv_mapred_json:parse_inputs/1",[]],
             ["fun","riak_kv","riak_kv_mapred_json:parse_query/1",[]],
             ["fun","riak_kv","riak_kv_mapred_json:parse_request/1",[]],
             ["fun","riak_kv","riak_kv_mapred_query:start/6",[]],
             ["fun","riak_kv","riak_kv_mapred_term:parse_request/1",[]],
             ["fun","riak_kv","riak_kv_mapreduce:map_identity/1",
              "map phase function for map_identity/1."],
             ["fun","riak_kv","riak_kv_mapreduce:map_identity/1",
              "Produces a spec for a map phase that simply return"],
             ["fun","riak_kv","riak_kv_mapreduce:map_object_value/1",
              "map phase function for map_object_value/1."],
             ["fun","riak_kv","riak_kv_mapreduce:map_object_value/1",
              "Produces a spec for a map phase that simply return"],
             ["fun","riak_kv","riak_kv_mapreduce:map_object_value_list/1",
              "map phase function for map_object_value_list/1."],
             ["fun","riak_kv","riak_kv_mapreduce:map_object_value_list/1",
              "Produces a spec for a map phase that returns the v"],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_identity/1",
              "map phase function for reduce_identity/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_identity/1",
              "Produces a spec for a reduce phase that simply ret"],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_plist_sum/1",
              "reduce phase function for reduce_plist_sum/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_plist_sum/1",
              "Produces a spec for a reduce phase that expects a "],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_set_union/1",
              "reduce phase function for reduce_set_union/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_set_union/1",
              "Produces a spec for a reduce phase that produces t"],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_sort/1",
              "reduce phase function for reduce_sort/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_sort/1",
              "Produces a spec for a reduce phase that sorts its\n"],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_string_to_integer/1",
              "reduce phase function for reduce_sort/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_string_to_integer/1",
              "Produces a spec for a reduce phase that converts\n "],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_sum/1",
              "reduce phase function for reduce_sum/1."],
             ["fun","riak_kv","riak_kv_mapreduce:reduce_sum/1",
              "Produces a spec for a reduce phase that produces t"],
             ["fun","riak_kv","riak_kv_multi_backend:callback/3",[]],
             ["fun","riak_kv","riak_kv_multi_backend:delete/2",[]],
             ["fun","riak_kv","riak_kv_multi_backend:drop/1",[]],
             ["fun","riak_kv","riak_kv_multi_backend:fold/3",[]],
             ["fun","riak_kv","riak_kv_multi_backend:get/2",[]],
             ["fun","riak_kv","riak_kv_multi_backend:is_empty/1",[]],
             ["fun","riak_kv","riak_kv_multi_backend:list/1",[]],
             ["fun","riak_kv","riak_kv_multi_backend:list_bucket/2",[]],
             ["fun","riak_kv","riak_kv_multi_backend:put/3",[]],
             ["fun","riak_kv","riak_kv_multi_backend:start/1",
              "riak_kv_multi_backend allows you to run multiple b"],
             ["fun","riak_kv","riak_kv_multi_backend:stop/1",[]],
             ["fun","riak_kv","riak_kv_pb_listener:code_change/3",[]],
             ["fun","riak_kv","riak_kv_pb_listener:handle_call/3",[]],
             ["fun","riak_kv","riak_kv_pb_listener:handle_cast/2",[]],
             ["fun","riak_kv","riak_kv_pb_listener:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_pb_listener:init/1",[]],
             ["fun","riak_kv","riak_kv_pb_listener:new_connection/2",[]],
             ["fun","riak_kv","riak_kv_pb_listener:sock_opts/0",[]],
             ["fun","riak_kv","riak_kv_pb_listener:start_link/0",[]],
             ["fun","riak_kv","riak_kv_pb_listener:terminate/2",[]],
             ["fun","riak_kv","riak_kv_pb_socket:code_change/3",[]],
             ["fun","riak_kv","riak_kv_pb_socket:handle_call/3",[]],
             ["fun","riak_kv","riak_kv_pb_socket:handle_cast/2",[]],
             ["fun","riak_kv","riak_kv_pb_socket:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_pb_socket:init/1",[]],
             ["fun","riak_kv","riak_kv_pb_socket:set_socket/2",[]],
             ["fun","riak_kv","riak_kv_pb_socket:start_link/0",[]],
             ["fun","riak_kv","riak_kv_pb_socket:terminate/2",[]],
             ["fun","riak_kv","riak_kv_pb_socket_sup:start_link/0",[]],
             ["fun","riak_kv","riak_kv_pb_socket_sup:start_socket/0",[]],
             ["fun","riak_kv","riak_kv_pb_socket_sup:stop/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:die/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:die_all/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:done/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:error/2",[]],
             ["fun","riak_kv","riak_kv_phase_proto:mapexec_error/2",[]],
             ["fun","riak_kv","riak_kv_phase_proto:mapexec_result/2",[]],
             ["fun","riak_kv","riak_kv_phase_proto:phase_done/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:phase_results/2",[]],
             ["fun","riak_kv","riak_kv_phase_proto:propagate_done/1",[]],
             ["fun","riak_kv","riak_kv_phase_proto:send_inputs/2",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_event/2",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_info/2",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_input/3",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_input_done/1",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_sync_event/3",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:handle_timeout/1",[]],
             ["fun","riak_kv","riak_kv_reduce_phase:terminate/2",[]],
             ["fun","riak_kv","riak_kv_stat:get_stats/0",
              "Get the current aggregation of stats."],
             ["fun","riak_kv","riak_kv_stat:start_link/0","Start the server."],
             ["fun","riak_kv","riak_kv_stat:update/1",
              "Update the given stat."],
             ["fun","riak_kv","riak_kv_sup:init/1","supervisor callback."],
             ["fun","riak_kv","riak_kv_sup:start_link/0",
              "API for starting the supervisor."],
             ["fun","riak_kv","riak_kv_test_util:call_unused_fsm_funs/1",[]],
             ["fun","riak_kv","riak_kv_test_util:stop_process/1",[]],
             ["fun","riak_kv","riak_kv_test_util:wait_for_pid/1",[]],
             ["fun","riak_kv","riak_kv_web:dispatch_table/0",[]],
             ["fun","riak_kv","riak_kv_wm_link_walker:allowed_methods/1",
              "Get the list of methods this resource supports."],
             ["fun","riak_kv",
              "riak_kv_wm_link_walker:content_types_provided/1",
              "List the content types available for representing "],
             ["fun","riak_kv","riak_kv_wm_link_walker:expires/2",[]],
             ["fun","riak_kv","riak_kv_wm_link_walker:init/1",
              "Initialize the resource."],
             ["fun","riak_kv","riak_kv_wm_link_walker:malformed_request/1",
              "Parse link walk query and determine if it's\n      "],
             ["fun","riak_kv","riak_kv_wm_link_walker:mapreduce_linkfun/2",
              "Extract the links from Object that match {Bucket, "],
             ["fun","riak_kv","riak_kv_wm_link_walker:process_post/1",
              "do nothing with POST\n       just allow client to u"],
             ["fun","riak_kv","riak_kv_wm_link_walker:resource_exists/1",
              "This resource exists if Riak returns {ok, riak_obj"],
             ["fun","riak_kv","riak_kv_wm_link_walker:service_available/1",
              "Determine whether or not a connection to Riak\n    "],
             ["fun","riak_kv","riak_kv_wm_link_walker:to_multipart_mixed/1",
              "Execute the link walking query, and build the resp"],
             ["fun","riak_kv","riak_kv_wm_mapred:allowed_methods/2",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:content_types_provided/2",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:init/1",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:malformed_request/2",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:nop/2",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:process_post/2",[]],
             ["fun","riak_kv","riak_kv_wm_mapred:service_available/2",[]],
             ["fun","riak_kv","riak_kv_wm_ping:init/1",[]],
             ["fun","riak_kv","riak_kv_wm_ping:to_html/2",[]],
             ["fun","riak_kv","riak_kv_wm_stats:content_types_provided/1",
              "Get the list of content types this resource provid"],
             ["fun","riak_kv","riak_kv_wm_stats:encodings_provided/1",
              "Get the list of encodings this resource provides."],
             ["fun","riak_kv","riak_kv_wm_stats:init/1",[]],
             ["fun","riak_kv","riak_kv_wm_stats:pretty_print/1",
              "Format the respons JSON object is a \"pretty-printe"],
             ["fun","riak_kv","riak_kv_wm_stats:produce_body/2",[]],
             ["fun","riak_kv","riak_kv_wm_stats:service_available/2",[]],
             ["fun","riak_kv","riak_object:ancestors/1",
              " Given a list of riak_object()s, return the object"],
             ["fun","riak_kv","riak_object:apply_updates/1",
              " Promote pending updates (made with the update_val"],
             ["fun","riak_kv","riak_object:bucket/1",
              "Return the containing bucket for this riak_object."],
             ["fun","riak_kv","riak_object:equal/2",
              "Deep (expensive) comparison of Riak objects."],
             ["fun","riak_kv","riak_object:from_json/1",[]],
             ["fun","riak_kv","riak_object:get_contents/1",
              " Return the contents (a list of {metadata, value} "],
             ["fun","riak_kv","riak_object:get_metadata/1",
              " Assert that this riak_object has no siblings and "],
             ["fun","riak_kv","riak_object:get_metadatas/1",
              " Return a list of the metadata values for this ria"],
             ["fun","riak_kv","riak_object:get_update_metadata/1",
              " Return the updated metadata of this riak_object."],
             ["fun","riak_kv","riak_object:get_update_value/1",
              " Return the updated value of this riak_object."],
             ["fun","riak_kv","riak_object:get_value/1",
              " Assert that this riak_object has no siblings and "],
             ["fun","riak_kv","riak_object:get_values/1",
              " Return a list of object values for this riak_obje"],
             ["fun","riak_kv","riak_object:increment_vclock/2",
              " Increment the entry for ClientId in O's vclock."],
             ["fun","riak_kv","riak_object:key/1",
              " Return the key for this riak_object."],
             ["fun","riak_kv","riak_object:merge/1",
              " Merge the contents and vclocks of OldObject and N"],
             ["fun","riak_kv","riak_object:new/3",
              "Constructor for new riak objects."],
             ["fun","riak_kv","riak_object:new/4",
              "Constructor for new riak objects with an initial c"],
             ["fun","riak_kv","riak_object:reconcile/1",
              " Reconcile a list of riak objects."],
             ["fun","riak_kv","riak_object:set_contents/1",
              " INTERNAL USE ONLY."],
             ["fun","riak_kv","riak_object:set_vclock/1",
              " INTERNAL USE ONLY."],
             ["fun","riak_kv","riak_object:syntactic_merge/3",[]],
             ["fun","riak_kv","riak_object:to_json/1",
              "Converts a riak_object into its JSON equivalent."],
             ["fun","riak_kv","riak_object:update_metadata/1",
              " Set the updated metadata of an object to M."],
             ["fun","riak_kv","riak_object:update_value/1",
              " Set the updated value of an object to V."],
             ["fun","riak_kv","riak_object:value_count/1",
              " Return the number of values (siblings) of this ri"],
             ["fun","riak_kv","riak_object:vclock/1",
              " Return the vector clock for this riak_object."],
             ["app","riakc","riakc","[application]"],
             ["mod","riakc","riakc_obj",
              "riakc_obj is used to wrap bucket/key/value data se"],
             ["mod","riakc","riakc_pb","protocol buffer utilities."],
             ["mod","riakc","riakc_pb_socket",[]],
             ["fun","riakc","riakc_obj:bucket/1",
              "Return the containing bucket for this riakc_obj."],
             ["fun","riakc","riakc_obj:get_content_type/1",
              "Return the content type of the value if there are "],
             ["fun","riakc","riakc_obj:get_content_types/1",
              "Return a list of content types for all siblings."],
             ["fun","riakc","riakc_obj:get_contents/1",
              " Return the contents (a list of {metadata, value} "],
             ["fun","riakc","riakc_obj:get_metadata/1",
              " Assert that this riak_object has no siblings and "],
             ["fun","riakc","riakc_obj:get_metadatas/1",
              " Return a list of the metadata values for this ria"],
             ["fun","riakc","riakc_obj:get_update_content_type/1",
              "Return the content type of the update value."],
             ["fun","riakc","riakc_obj:get_update_metadata/1",
              " Return the updated metadata of this riakc_obj."],
             ["fun","riakc","riakc_obj:get_update_value/1",
              " Return the updated value of this riakc_obj."],
             ["fun","riakc","riakc_obj:get_value/1",
              " Assert that this riakc_obj has no siblings and re"],
             ["fun","riakc","riakc_obj:get_values/1",
              " Return a list of object values for this riakc_obj"],
             ["fun","riakc","riakc_obj:key/1",
              " Return the key for this riakc_obj."],
             ["fun","riakc","riakc_obj:md_ctype/1",
              " Return the content type from metadata."],
             ["fun","riakc","riakc_obj:new/2",
              "Constructor for new riak client objects."],
             ["fun","riakc","riakc_obj:new/3",
              "Constructor for new riak client objects with an up"],
             ["fun","riakc","riakc_obj:new/4",
              "Constructor for new riak client objects with an up"],
             ["fun","riakc","riakc_obj:select_sibling/2",
              " Select the sibling to use for update - starting f"],
             ["fun","riakc","riakc_obj:update_content_type/2",
              " Set the updated content-type of an object to CT."],
             ["fun","riakc","riakc_obj:update_metadata/2",
              " Set the updated metadata of an object to M."],
             ["fun","riakc","riakc_obj:update_value/2",
              " Set the updated value of an object to V."],
             ["fun","riakc","riakc_obj:update_value/3",
              " Set the updated value of an object to V."],
             ["fun","riakc","riakc_obj:value_count/1",
              " Return the number of values (siblings) of this ri"],
             ["fun","riakc","riakc_obj:vclock/1",
              " Return the vector clock for this riakc_obj."],
             ["fun","riakc","riakc_pb_socket:default_timeout/1",
              "Return the default timeout for an operation if non"],
             ["fun","riakc","riakc_pb_socket:delete/3",
              "Delete the key/value."],
             ["fun","riakc","riakc_pb_socket:delete/4",
              "Delete the key/value specifying timeout."],
             ["fun","riakc","riakc_pb_socket:delete/5",
              "Delete the key/value with options and timeout\n    "],
             ["fun","riakc","riakc_pb_socket:get/3",
              "Get bucket/key from the server\n       Will return "],
             ["fun","riakc","riakc_pb_socket:get/4",
              "Get bucket/key from the server specifying timeout\n"],
             ["fun","riakc","riakc_pb_socket:get/5",
              "Get bucket/key from the server supplying options a"],
             ["fun","riakc","riakc_pb_socket:get_bucket/2",
              "Get bucket properties."],
             ["fun","riakc","riakc_pb_socket:get_bucket/3",
              "Get bucket properties specifying a timeout."],
             ["fun","riakc","riakc_pb_socket:get_client_id/1",
              "Get the client id for this connection."],
             ["fun","riakc","riakc_pb_socket:get_client_id/2",
              "Get the client id for this connection specifying t"],
             ["fun","riakc","riakc_pb_socket:get_server_info/1",
              "Get the server information for this connection."],
             ["fun","riakc","riakc_pb_socket:get_server_info/2",
              "Get the server information for this connection spe"],
             ["fun","riakc","riakc_pb_socket:is_connected/1",
              "Return true if connected to the remote server and "],
             ["fun","riakc","riakc_pb_socket:is_connected/2",
              "See is_connected/1 with gen_server timeout."],
             ["fun","riakc","riakc_pb_socket:list_buckets/1",
              "List all buckets on the server."],
             ["fun","riakc","riakc_pb_socket:list_buckets/2",
              "List all buckets on the server specifying timeout."],
             ["fun","riakc","riakc_pb_socket:list_keys/2",
              "List all keys in a bucket."],
             ["fun","riakc","riakc_pb_socket:list_keys/3",
              "List all keys in a bucket specifying timeout."],
             ["fun","riakc","riakc_pb_socket:mapred/1",
              "Perform a map/reduce job across the cluster."],
             ["fun","riakc","riakc_pb_socket:mapred/1",
              "Perform a map/reduce job across the cluster."],
             ["fun","riakc","riakc_pb_socket:mapred_bucket/1",
              "Perform a map/reduce job against a bucket with a t"],
             ["fun","riakc","riakc_pb_socket:mapred_bucket/1",
              "Perform a map/reduce job against a bucket across t"],
             ["fun","riakc","riakc_pb_socket:mapred_bucket_stream/1",
              "Perform a streaming map/reduce job against a bucke"],
             ["fun","riakc","riakc_pb_socket:mapred_stream/1",
              "Perform a streaming map/reduce job with a timeout "],
             ["fun","riakc","riakc_pb_socket:mapred_stream/1",
              "Perform a streaming map/reduce job across the clus"],
             ["fun","riakc","riakc_pb_socket:ping/1","Ping the server."],
             ["fun","riakc","riakc_pb_socket:ping/2",
              "Ping the server specifying timeout."],
             ["fun","riakc","riakc_pb_socket:put/2",
              "Put the metadata/value in the object under bucket/"],
             ["fun","riakc","riakc_pb_socket:put/3",
              "Put the metadata/value in the object under bucket/"],
             ["fun","riakc","riakc_pb_socket:put/4",
              "Put the metadata/value in the object under bucket/"],
             ["fun","riakc","riakc_pb_socket:search/1",
              "Execute a search query and feed the results into a"],
             ["fun","riakc","riakc_pb_socket:search/1",
              "Execute a search query."],
             ["fun","riakc","riakc_pb_socket:set_bucket/3",
              "Set bucket properties."],
             ["fun","riakc","riakc_pb_socket:set_bucket/4",
              "Set bucket properties specifying a timeout."],
             ["fun","riakc","riakc_pb_socket:set_client_id/2",
              "Set the client id for this connection."],
             ["fun","riakc","riakc_pb_socket:set_client_id/3",
              "Set the client id for this connection specifying t"],
             ["fun","riakc","riakc_pb_socket:set_options/2",
              "Change the options for this socket."],
             ["fun","riakc","riakc_pb_socket:set_options/3",
              "set_options/2 with a gen_server timeout."],
             ["fun","riakc","riakc_pb_socket:start/2",
              "Create a process to talk with the riak server on A"],
             ["fun","riakc","riakc_pb_socket:start/3",
              "Create a process to talk with the riak server on A"],
             ["fun","riakc","riakc_pb_socket:start_link/2",
              "Create a linked process to talk with the riak serv"],
             ["fun","riakc","riakc_pb_socket:start_link/3",
              "Create a linked process to talk with the riak serv"],
             ["fun","riakc","riakc_pb_socket:stop/1",
              "Disconnect the socket and stop the process."],
             ["fun","riakc","riakc_pb_socket:stream_list_keys/2",
              "Stream list of keys in the bucket to the calling p"],
             ["fun","riakc","riakc_pb_socket:stream_list_keys/3",
              "Stream list of keys in the bucket to the calling p"],
             ["app","skerl","skerl","[application]"],
             ["mod","skerl","hex",[]],
             ["mod","skerl","skerl",[]],
             ["fun","skerl","hex:bin_to_hexstr/1",[]],
             ["fun","skerl","hex:hexstr_to_bin/1",[]],
             ["fun","skerl","skerl:final/1",[]],
             ["fun","skerl","skerl:hash/2",[]],
             ["fun","skerl","skerl:hexhash/2",[]],
             ["fun","skerl","skerl:init/0",[]],
             ["fun","skerl","skerl:init/1",[]],
             ["fun","skerl","skerl:update/2",[]],
             ["app","webmachine","webmachine","[application]"],
             ["mod","webmachine","webmachine",[]],
             ["mod","webmachine","webmachine_app",
              "Callbacks for the webmachine application."],
             ["mod","webmachine","webmachine_decision_core",
              "Decision core for webmachine."],
             ["mod","webmachine","webmachine_deps",
              "Ensure that the relatively-installed dependencies "],
             ["mod","webmachine","webmachine_dispatcher",
              "Module for URL-dispatch by pattern matching."],
             ["mod","webmachine","webmachine_error_handler",
              "Some fairly minimal error message formatters."],
             ["mod","webmachine","webmachine_logger",[]],
             ["mod","webmachine","webmachine_mochiweb",
              "Mochiweb interface for webmachine."],
             ["mod","webmachine","webmachine_multipart",
              "Utility for parsing multipart form bodies."],
             ["mod","webmachine","webmachine_perf_logger",[]],
             ["mod","webmachine","webmachine_request",
              "Webmachine HTTP Request Abstraction."],
             ["mod","webmachine","webmachine_resource",[]],
             ["mod","webmachine","webmachine_router",
              "Module to add and remove dynamic routes to webmach"],
             ["mod","webmachine","webmachine_sup",
              "Supervisor for the webmachine application."],
             ["mod","webmachine","webmachine_util",
              "Utilities for parsing, quoting, and negotiation."],
             ["mod","webmachine","wrq",[]],
             ["fun","webmachine","webmachine:new_request/2",[]],
             ["fun","webmachine","webmachine:start/0",
              "Start the webmachine server."],
             ["fun","webmachine","webmachine:stop/0",
              "Stop the webmachine server."],
             ["fun","webmachine","webmachine_app:start/2",
              "application start callback for webmachine."],
             ["fun","webmachine","webmachine_app:stop/1",
              "application stop callback for webmachine."],
             ["fun","webmachine","webmachine_decision_core:do_log/1",[]],
             ["fun","webmachine","webmachine_decision_core:handle_request/2",
              []],
             ["fun","webmachine","webmachine_deps:deps_on_path/0",
              "List of project dependencies on the path."],
             ["fun","webmachine","webmachine_deps:ensure/0",
              "Ensure that the ebin and include paths for depende"],
             ["fun","webmachine","webmachine_deps:ensure/1",
              "Ensure that all ebin and include paths for depende"],
             ["fun","webmachine","webmachine_deps:get_base_dir/0",
              "Return the application directory for this applicat"],
             ["fun","webmachine","webmachine_deps:get_base_dir/1",
              "Return the application directory for Module."],
             ["fun","webmachine","webmachine_deps:local_path/1",
              "Return an application-relative directory from Modu"],
             ["fun","webmachine","webmachine_deps:local_path/1",
              "Return an application-relative directory for this "],
             ["fun","webmachine","webmachine_deps:new_siblings/1",
              "Find new siblings paths relative to Module that ar"],
             ["fun","webmachine","webmachine_dispatcher:dispatch/1",
              "Interface for URL dispatching."],
             ["fun","webmachine","webmachine_dispatcher:dispatch/1",
              "Interface for URL dispatching."],
             ["fun","webmachine","webmachine_error_handler:render_error/3",[]],
             ["fun","webmachine","webmachine_logger:code_change/3",[]],
             ["fun","webmachine","webmachine_logger:handle_call/3",[]],
             ["fun","webmachine","webmachine_logger:handle_cast/2",[]],
             ["fun","webmachine","webmachine_logger:handle_info/2",[]],
             ["fun","webmachine","webmachine_logger:init/1",[]],
             ["fun","webmachine","webmachine_logger:log_access/1",[]],
             ["fun","webmachine","webmachine_logger:refresh/0",[]],
             ["fun","webmachine","webmachine_logger:start_link/1",[]],
             ["fun","webmachine","webmachine_logger:terminate/2",[]],
             ["fun","webmachine","webmachine_mochiweb:loop/1",[]],
             ["fun","webmachine","webmachine_mochiweb:start/1",[]],
             ["fun","webmachine","webmachine_mochiweb:stop/0",[]],
             ["fun","webmachine","webmachine_multipart:find_boundary/1",
              "Find the multipart boundary for a request."],
             ["fun","webmachine","webmachine_multipart:get_all_parts/1",
              "Turn a multipart form into component parts."],
             ["fun","webmachine","webmachine_multipart:stream_parts/1",
              "Similar to get_all_parts/2, but for streamed/chunk"],
             ["fun","webmachine","webmachine_perf_logger:code_change/3",[]],
             ["fun","webmachine","webmachine_perf_logger:handle_call/3",[]],
             ["fun","webmachine","webmachine_perf_logger:handle_cast/2",[]],
             ["fun","webmachine","webmachine_perf_logger:handle_info/2",[]],
             ["fun","webmachine","webmachine_perf_logger:init/1",[]],
             ["fun","webmachine","webmachine_perf_logger:log/1",[]],
             ["fun","webmachine","webmachine_perf_logger:refresh/0",[]],
             ["fun","webmachine","webmachine_perf_logger:start_link/1",[]],
             ["fun","webmachine","webmachine_perf_logger:terminate/2",[]],
             ["fun","webmachine","webmachine_request:add_response_header/2",
              []],
             ["fun","webmachine","webmachine_request:add_response_headers/1",
              []],
             ["fun","webmachine",
              "webmachine_request:append_to_response_body/1",[]],
             ["fun","webmachine","webmachine_request:call/1",[]],
             ["fun","webmachine","webmachine_request:disp_path/0",[]],
             ["fun","webmachine","webmachine_request:do_redirect/0",[]],
             ["fun","webmachine","webmachine_request:get_app_root/0",[]],
             ["fun","webmachine","webmachine_request:get_cookie_value/1",[]],
             ["fun","webmachine","webmachine_request:get_header_value/1",[]],
             ["fun","webmachine","webmachine_request:get_metadata/1",[]],
             ["fun","webmachine","webmachine_request:get_out_header/1",[]],
             ["fun","webmachine","webmachine_request:get_path_info/0",[]],
             ["fun","webmachine","webmachine_request:get_path_info/1",[]],
             ["fun","webmachine","webmachine_request:get_path_tokens/0",[]],
             ["fun","webmachine","webmachine_request:get_peer/0",[]],
             ["fun","webmachine","webmachine_request:get_qs_value/1",[]],
             ["fun","webmachine","webmachine_request:get_qs_value/2",[]],
             ["fun","webmachine","webmachine_request:get_req_header/1",[]],
             ["fun","webmachine","webmachine_request:get_reqdata/0",[]],
             ["fun","webmachine","webmachine_request:has_out_header/1",[]],
             ["fun","webmachine","webmachine_request:has_response_body/0",[]],
             ["fun","webmachine","webmachine_request:headers/0",[]],
             ["fun","webmachine","webmachine_request:load_dispatch_data/6",[]],
             ["fun","webmachine","webmachine_request:log_data/0",[]],
             ["fun","webmachine",
              "webmachine_request:merge_response_headers/1",[]],
             ["fun","webmachine","webmachine_request:method/0",[]],
             ["fun","webmachine","webmachine_request:out_headers/0",[]],
             ["fun","webmachine","webmachine_request:parse_cookie/0",[]],
             ["fun","webmachine","webmachine_request:parse_qs/0",[]],
             ["fun","webmachine","webmachine_request:path/0",[]],
             ["fun","webmachine","webmachine_request:peer/0",[]],
             ["fun","webmachine","webmachine_request:range/0",[]],
             ["fun","webmachine","webmachine_request:raw_path/0",[]],
             ["fun","webmachine",
              "webmachine_request:remove_response_header/1",[]],
             ["fun","webmachine","webmachine_request:req_body/1",[]],
             ["fun","webmachine","webmachine_request:req_headers/0",[]],
             ["fun","webmachine","webmachine_request:resp_headers/0",[]],
             ["fun","webmachine","webmachine_request:resp_redirect/0",[]],
             ["fun","webmachine","webmachine_request:response_body/0",[]],
             ["fun","webmachine","webmachine_request:response_code/0",[]],
             ["fun","webmachine","webmachine_request:send_response/1",[]],
             ["fun","webmachine","webmachine_request:set_metadata/2",[]],
             ["fun","webmachine","webmachine_request:set_reqdata/1",[]],
             ["fun","webmachine","webmachine_request:set_resp_body/1",[]],
             ["fun","webmachine","webmachine_request:set_response_code/1",[]],
             ["fun","webmachine","webmachine_request:socket/0",[]],
             ["fun","webmachine","webmachine_request:stream_req_body/1",[]],
             ["fun","webmachine","webmachine_request:trim_state/0",[]],
             ["fun","webmachine","webmachine_request:version/0",[]],
             ["fun","webmachine","webmachine_resource:do/2",[]],
             ["fun","webmachine","webmachine_resource:log_d/1",[]],
             ["fun","webmachine","webmachine_resource:stop/0",[]],
             ["fun","webmachine","webmachine_resource:wrap/2",[]],
             ["fun","webmachine","webmachine_router:add_route/1",
              "Adds a route to webmachine's route table."],
             ["fun","webmachine","webmachine_router:remove_resource/1",
              "Removes all routes for a specific resource module."],
             ["fun","webmachine","webmachine_router:remove_route/1",
              "Removes a route from webamchine's route table."],
             ["fun","webmachine","webmachine_router:start_link/0",
              "Starts the webmachine_router gen_server."],
             ["fun","webmachine","webmachine_sup:init/1",
              "supervisor callback."],
             ["fun","webmachine","webmachine_sup:start_link/0",
              "API for starting the supervisor."],
             ["fun","webmachine","webmachine_sup:start_logger/1",[]],
             ["fun","webmachine","webmachine_sup:start_perf_logger/1",[]],
             ["fun","webmachine","webmachine_sup:upgrade/0",
              "Add processes if necessary."],
             ["fun","webmachine","webmachine_util:choose_charset/2",[]],
             ["fun","webmachine","webmachine_util:choose_encoding/2",[]],
             ["fun","webmachine","webmachine_util:choose_media_type/2",[]],
             ["fun","webmachine","webmachine_util:compare_ims_dates/2",[]],
             ["fun","webmachine","webmachine_util:convert_request_date/1",[]],
             ["fun","webmachine","webmachine_util:guess_mime/1",
              " Guess the mime type of a file by the extension of"],
             ["fun","webmachine","webmachine_util:media_type_to_detail/1",[]],
             ["fun","webmachine","webmachine_util:now_diff_milliseconds/1",
              " Compute the difference between two now() tuples, "],
             ["fun","webmachine","webmachine_util:unquote_header/1",[]],
             ["fun","webmachine","wrq:add_note/3",[]],
             ["fun","webmachine","wrq:app_root/1",[]],
             ["fun","webmachine","wrq:append_to_resp_body/2",[]],
             ["fun","webmachine","wrq:append_to_response_body/2",[]],
             ["fun","webmachine","wrq:create/4",[]],
             ["fun","webmachine","wrq:disp_path/1",[]],
             ["fun","webmachine","wrq:do_redirect/2",[]],
             ["fun","webmachine","wrq:fresh_resp_headers/2",[]],
             ["fun","webmachine","wrq:get_cookie_value/2",[]],
             ["fun","webmachine","wrq:get_notes/1",[]],
             ["fun","webmachine","wrq:get_qs_value/2",[]],
             ["fun","webmachine","wrq:get_qs_value/3",[]],
             ["fun","webmachine","wrq:get_req_header/2",[]],
             ["fun","webmachine","wrq:get_resp_header/2",[]],
             ["fun","webmachine","wrq:host_tokens/1",[]],
             ["fun","webmachine","wrq:load_dispatch_data/7",[]],
             ["fun","webmachine","wrq:max_recv_body/1",[]],
             ["fun","webmachine","wrq:merge_resp_headers/2",[]],
             ["fun","webmachine","wrq:method/1",[]],
             ["fun","webmachine","wrq:path/1",[]],
             ["fun","webmachine","wrq:path_info/1",[]],
             ["fun","webmachine","wrq:path_info/2",[]],
             ["fun","webmachine","wrq:path_tokens/1",[]],
             ["fun","webmachine","wrq:peer/1",[]],
             ["fun","webmachine","wrq:port/1",[]],
             ["fun","webmachine","wrq:raw_path/1",[]],
             ["fun","webmachine","wrq:remove_resp_header/2",[]],
             ["fun","webmachine","wrq:req_body/1",[]],
             ["fun","webmachine","wrq:req_cookie/1",[]],
             ["fun","webmachine","wrq:req_headers/1",[]],
             ["fun","webmachine","wrq:req_qs/1",[]],
             ["fun","webmachine","wrq:resp_body/1",[]],
             ["fun","webmachine","wrq:resp_headers/1",[]],
             ["fun","webmachine","wrq:resp_redirect/1",[]],
             ["fun","webmachine","wrq:response_code/1",[]],
             ["fun","webmachine","wrq:set_disp_path/2",[]],
             ["fun","webmachine","wrq:set_max_recv_body/2",[]],
             ["fun","webmachine","wrq:set_peer/2",[]],
             ["fun","webmachine","wrq:set_req_body/2",[]],
             ["fun","webmachine","wrq:set_resp_body/2",[]],
             ["fun","webmachine","wrq:set_resp_header/3",[]],
             ["fun","webmachine","wrq:set_resp_headers/2",[]],
             ["fun","webmachine","wrq:set_response_code/2",[]],
             ["fun","webmachine","wrq:stream_req_body/2",[]],
             ["fun","webmachine","wrq:version/1",[]]];